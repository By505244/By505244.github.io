<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【置顶】网站更新日志</title>
    <url>/oi_blogs/2022/07/08/%E3%80%90%E7%BD%AE%E9%A1%B6%E3%80%91%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<p><span class="math inline">\(\texttt{2022/07/07}\)</span>
&#x66F4;&#x65B0;&#x5185;&#x5BB9;&#xFF1A;</p>
<ul>
<li>&#x65B0;&#x589E;&#x4E86;&#x8BC4;&#x8BBA;&#x529F;&#x80FD;</li>
<li>&#x589E;&#x52A0;&#x4E86;&#x653E;&#x5927;&#x56FE;&#x7247;&#x7684;&#x529F;&#x80FD;</li>
<li>&#x5207;&#x6362; blog &#x4E3B;&#x9898;</li>
<li>&#x4E3B;&#x9875;&#x5185;&#x5BB9;&#x7F29;&#x51CF;</li>
<li>cdn &#x66F4;&#x6362;&#x3002;</li>
</ul>
]]></content>
      <tags>
        <tag>更新日志</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1699C题解</title>
    <url>/oi_blogs/2022/07/07/CF1699C%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="&#x9898;&#x610F;">&#x9898;&#x610F;</h3>
<p>&#x4F60;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;&#x5E8F;&#x5217; <span class="math inline">\(a_1,a_2\ldots
a_n\)</span>&#xFF0C;&#x6BCF;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x503C;&#x5747;&#x4E3A; <span class="math inline">\(0\)</span> &#x5230;
<span class="math inline">\(n-1\)</span>&#xFF08;&#x4E0D;&#x91CD;&#x4E0D;&#x6F0F;&#xFF09;&#x3002;
&#x6211;&#x4EEC;&#x8981;&#x627E;&#x5230;&#x4E00;&#x5171;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x5E8F;&#x5217; <span class="math inline">\(b_1,b_2\ldots
b_n\)</span> &#xFF08;<span class="math inline">\(b\)</span> &#x5E8F;&#x5217;&#x6570;&#x503C;&#x8303;&#x56F4;&#x4E0E;
<span class="math inline">\(a\)</span> &#x4E00;&#x81F4;&#xFF09;&#x4E0E; <span class="math inline">\(a\)</span> &#x5E8F;&#x5217;&#x76F8;&#x4F3C;&#x3002;</p>
<p>&#x76F8;&#x4F3C;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<p>&#x4EE4; <span class="math inline">\(\text{MEX}\)</span>
&#x4E3A;&#x5176;&#x4E2D;&#x6CA1;&#x6709;&#x51FA;&#x73B0;&#x8FC7;&#x7684;&#x6700;&#x5C0F;&#x975E;&#x8D1F;&#x6574;&#x6570;</p>
<p>&#xFF08;&#x5982; <span class="math inline">\(\text{MEX}([1,2,3,4,5]=0,\text{MEX}([0,1,2,4,5])=3)\)</span>&#xFF09;</p>
<p>&#x5219;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x4E00;&#x4E2A; <span class="math inline">\(l,r(1\le l\le r\le
n)\)</span> &#x6EE1;&#x8DB3;&#xFF1A;</p>
<p><span class="math display">\[\text{MEX}([{a_l,a_{l+1}\cdots,a_r}])=\text{MEX}([b_l,b_{l+1}\cdots,b_r])
\]</span></p>
<p>&#x5219;&#x79F0; <span class="math inline">\(a\)</span> &#x4E0E; <span class="math inline">\(b\)</span> &#x76F8;&#x4F3C;&#x3002;</p>
<p>&#x5BF9;&#x7B54;&#x6848;&#x8FDB;&#x884C; <span class="math inline">\(10^9+7\)</span> &#x53D6;&#x6A21;&#x3002;</p>
<span id="more"></span>
<h3 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;</h3>
<p>&#x9898;&#x76EE;&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x6C42;&#x5C06; <span class="math inline">\(a\)</span>
&#x4EA4;&#x6362;&#x4E00;&#x5B9A;&#x4E2A;&#x6570;&#x4F7F;&#x5F97;&#x4EA4;&#x6362;&#x540E;&#x4E0E;&#x4EA4;&#x6362;&#x524D;&#x7684;&#x5E8F;&#x5217;&#x76F8;&#x4F3C;&#xFF08;&#x56E0;&#x4E3A;&#x6570;&#x5B57;&#x90FD;&#x4E00;&#x6837;&#xFF09;&#x3002;</p>
<p>&#x8BBE; <span class="math inline">\(path_x\)</span> &#x4E3A; <span class="math inline">\(x\)</span> &#x5728; <span class="math inline">\(a_i\)</span> &#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p>
<p>&#xFF08;&#x5982; <span class="math inline">\(a=\{1,3,2\}\)</span>&#xFF0C;<span class="math inline">\(path_1=1,path_2=3,path_3=2\)</span>&#xFF09;</p>
<p>&#x4EE4; <span class="math inline">\(lp=\min_{i=0}^{x-1}path_i,rp=\max_{i=0}^{x-1}path_i\)</span></p>
<p>&#x82E5;</p>
<p><span class="math display">\[1\le l\le lp\le path_2\le rp\le r\le
n\]</span></p>
<p>&#x56E0;&#x4E3A; <span class="math inline">\(l\)</span> &#x5230; <span class="math inline">\(r\)</span> &#x7ECF;&#x8FC7; <span class="math inline">\(0\)</span> &#x5230; <span class="math inline">\(x\)</span> &#xFF08;&#x524D;&#x9762;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x5047;&#x8BBE;&#xFF01;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#xFF1A;</p>
<p><span class="math display">\[\text{MEX}([a_l,a_{l+1}\cdots,a_r])\ge
x+1\]</span></p>
<p><del>&#x7136;&#x540E;&#x5C31;&#x6CA1;&#x4E86;</del></p>
<hr>
<p>&#x7279;&#x522B;&#x7684;&#xFF0C;&#x82E5; <span class="math inline">\(l&gt;lp\)</span> &#x6216; <span class="math inline">\(r&lt;rp\)</span>&#xFF0C;&#x5219;&#x56E0;&#x4E3A; <span class="math inline">\(l\)</span> &#x5230; <span class="math inline">\(r\)</span> &#x8FD9;&#x6761;&#x7EBF;&#x6BB5;&#x4E00;&#x5B9A;&#x672A;&#x8986;&#x76D6;&#x5230; <span class="math inline">\(0\)</span> &#x5230; <span class="math inline">\(x-1\)</span> &#x4E2D;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6570; &#xFF08;&#x56E0;&#x4E3A; <span class="math inline">\(lp,rp\)</span> &#x5B9A;&#x4E49;&#x6446;&#x5728;&#x90A3;&#xFF09;&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(\text{MEX}([a_l,a_{l+1}\cdots a_r])\le
x\)</span>&#xFF0C;&#x5BFC;&#x81F4; <span class="math inline">\(x\)</span>
&#x7684;&#x4F4D;&#x7F6E;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x79FB;&#x52A8;&#x800C;&#x4E0D;&#x5F71;&#x54CD; <span class="math inline">\(\text{MEX}\)</span> &#x7684;&#x53D6;&#x503C;&#xFF08;&#x5F53;&#x7136;&#x662F;&#x5728; <span class="math inline">\(l&gt;lp\)</span> &#x6216; <span class="math inline">\(r&lt;rp\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x91CD;&#x70B9;&#x8BA8;&#x8BBA;
<span class="math inline">\(1\le l\le lp\le rp\le r\le n\)</span>
&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5373;&#x63A5;&#x4E0B;&#x6765; <span class="math inline">\(l\)</span> &#x4E0E; <span class="math inline">\(r\)</span> &#x7684;&#x8303;&#x56F4;&#x65E0;&#x7279;&#x6B8A;&#x8BF4;&#x660E;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F; <span class="math inline">\(1\le l\le lq\le rq\le r\le n\)</span>&#x3002;</p>
<hr>
<p>&#x8BBE; <span class="math inline">\(path_x\)</span> &#x79FB;&#x52A8;&#x540E;&#x7684;&#x6240;&#x5230;&#x8FBE;&#x7684;&#x4F4D;&#x7F6E;&#x4E3A;
<span class="math inline">\(p\)</span>&#x3002;&#xFF08;<span class="math inline">\(path_x\)</span> &#x4E3A;&#x79FB;&#x52A8;&#x524D;&#x7684;&#x4F4D;&#x7F6E;&#xFF09;</p>
<h5 id="&#x5F53;-lple-path_xle-rp-&#x65F6;">&#x5F53; <span class="math inline">\(lp\le
path_x\le rp\)</span> &#x65F6;&#xFF1A;</h5>
<p><del>&#x8FD9;&#x79CD;&#x5E94;&#x8BE5;&#x662F;&#x8981;&#x653E;&#x5728;&#x4E2D;&#x95F4;&#x8BB2;&#x7684;&#xFF0C;&#x4F46;&#x4F5C;&#x4E3A;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x63D0;&#x524D;&#x4E86;&#x3002;</del></p>
<p>&#x7ED3;&#x5408;&#x4E0A;&#x5F00;&#x5934;&#x7684;&#x8BA8;&#x8BBA;&#x3002;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#x5982;&#x679C; <span class="math inline">\(lp\le
p\le rp\)</span>&#xFF0C;&#x90A3;&#x4E48;&#x79FB;&#x52A8;&#x540E;&#x7684;&#x5E8F;&#x5217;&#x4E00;&#x5B9A;&#x4E0E;&#x79FB;&#x52A8;&#x524D;&#x7684;&#x5E8F;&#x5217;&#x76F8;&#x4F3C;&#x3002;</p>
<p>&#x53CD;&#x4E4B;&#xFF0C;<span class="math inline">\(p&lt;lp\)</span> &#x6216; <span class="math inline">\(p&gt;rp\)</span>&#xFF0C;&#x4EA4;&#x6362;&#x540E;&#x7684; <span class="math inline">\(\text{MEX}([a_{lp},a_{lp+1}\cdots
a_{rp}])\)</span> &#x4E00;&#x5B9A;&#x4E0D;&#x7B49;&#x4E8E;&#x4EA4;&#x6362;&#x524D;&#x7684;&#x3002;</p>
<p>&#x56E0;&#x4E3A; <span class="math inline">\(lp\)</span> &#x5230; <span class="math inline">\(rp\)</span> &#x8986;&#x76D6;&#x5230;&#x4E86; <span class="math inline">\(0\)</span> &#x5230; <span class="math inline">\(x-1\)</span>&#xFF0C;<span class="math inline">\(x\)</span> &#x79FB;&#x8D70;&#x4E86;&#x4E00;&#x5B9A;&#x4F1A;&#x4F7F;&#x5F97; <span class="math inline">\(\text{MEX}\)</span> &#x503C;&#x53D8;&#x4E3A; <span class="math inline">\(x\)</span>&#xFF0C;&#x800C;&#x539F;&#x6765;&#x5F00;&#x5934;&#x7ED9;&#x51FA;&#x7684;&#x7ED3;&#x8BBA;&#x79FB;&#x8D70;&#x524D; <span class="math inline">\(\text{MEX}([a_{lp},a_{lp+1}\cdots a_{rp}])\ge
x+1\)</span> &#x4E0D;&#x7B26;&#x3002;</p>
<p>&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x5728; <span class="math inline">\(lp\)</span> &#x5230; <span class="math inline">\(rp\)</span> &#x4E4B;&#x95F4;&#x7684;&#x6570;&#x4E00;&#x5171;&#x6709; <span class="math inline">\(rp-lp+1-x\)</span> &#x79CD;&#x4EA4;&#x6362;&#x65B9;&#x6848;&#xFF0C;&#x56E0;&#x4E3A;&#x5728; <span class="math inline">\(lp\)</span> &#x5230; <span class="math inline">\(rp\)</span> &#x4E4B;&#x95F4;&#x5DF2;&#x7ECF;&#x6709; <span class="math inline">\(x\)</span>
&#x4E2A;&#x5176;&#x4ED6;&#x6570;&#x4E86;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x5176;&#x4ED6;&#x6570;&#x4E5F;&#x5360;&#x4E86;&#x4E00;&#x4E2A;&#x7A7A;&#x95F4;&#xFF0C;&#x6240;&#x4EE5;&#x51CF;&#x53BB;&#x3002;</p>
<p>&#x6240;&#x4EE5;&#x7B54;&#x6848;&#x518D;&#x4E58; <span class="math inline">\(rp-lp+1-x\)</span>
&#x5C31;&#x7ED3;&#x675F;&#x5566;&#xFF01;</p>
<h5 id="&#x5F53;-path_xlp-&#x65F6;">&#x5F53; <span class="math inline">\(path_x&lt;lp\)</span> &#x65F6;&#xFF1A;</h5>
<p>&#x4EFB;&#x4F55;&#x5411;&#x5DE6;&#x5411;&#x53F3;&#x7684;&#x79FB;&#x52A8;&#x90FD;&#x662F;&#x4E0D;&#x88AB;&#x5141;&#x8BB8;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x6837;&#x4F1A;&#x6539;&#x53D8; <span class="math inline">\(\text{MEX}\)</span> &#x7684;&#x53D6;&#x503C;&#x3002;</p>
<p>&#x5219; <span class="math inline">\(\text{MEX}([path_x,path_x+1\cdots
n])\)</span> &#x4F1A;&#x5728; <span class="math inline">\(p&lt;path_x\)</span>
&#x65F6;&#x6539;&#x53D8;&#x3002;&#xFF08;&#x5373;&#x5DE6;&#x79FB;&#xFF0C;<span class="math inline">\(x\)</span>
&#x5DE6;&#x79FB;&#x8D70;&#x4E86;&#x6700;&#x5C0F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x81EA;&#x7136;&#x4E5F;&#x5C31;&#x51CF;&#x5C11;&#x4E86;&#xFF09;</p>
<p><span class="math inline">\(\text{MEX}([path_x+1,path_x+2\cdots
n])\)</span> &#x4F1A;&#x5728; <span class="math inline">\(p&gt;path_x\)</span>
&#x65F6;&#x6539;&#x53D8;&#x3002;&#xFF08;&#x5373;&#x53F3;&#x79FB;&#xFF0C;&#x539F;&#x6765;&#x91CC;&#x9762;&#x6CA1;&#x6709; <span class="math inline">\(x\)</span>&#xFF0C;&#x79FB;&#x8FDB;&#x6765;&#x4E86;&#xFF0C;<del>&#x5C31;&#x6709;&#x4E86;
x</del>&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x91CC;&#x9762;&#x672C;&#x6765;&#x5C31;&#x6709; <span class="math inline">\(0\)</span> &#x5230;
<span class="math inline">\(x-1\)</span>&#xFF0C;&#x6700;&#x5C0F;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x5C31;&#x589E;&#x52A0;&#x4E86;&#xFF09;</p>
<p>&#x5982;&#x8868; &#x4E24;&#x884C;&#x5206;&#x522B;&#x4EE3;&#x8868;&#x5DE6;&#x79FB;&#x548C;&#x53F3;&#x79FB;&#xFF0C;&#x5176;&#x4E2D; <span class="math inline">\(x=2\)</span>&#x3002;<del>&#x8868;&#x4EC5;&#x4F5C;&#x7ED3;&#x5408;&#x4E0A;&#x6587;&#x7406;&#x89E3;&#xFF0C;&#x7531;&#x4E8E;&#x7BC7;&#x5E45;&#x6240;&#x9650;&#xFF08;&#x66F4;&#x591A;&#x662F;&#x61D2;&#xFF09;&#x4E0D;&#x518D;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x3002;</del></p>
<table>
<colgroup>
<col style="width: 11%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 3%">
<col style="width: 33%">
<col style="width: 34%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">&#x72B6;&#x6001;</th>
<th style="text-align: center;"></th>
<th style="text-align: center;"></th>
<th style="text-align: center;"></th>
<th style="text-align: center;"></th>
<th style="text-align: center;"></th>
<th style="text-align: center;"></th>
<th style="text-align: center;"><span class="math inline">\(\text{MEX}([path_x,path_x+1\cdots
n])\)</span></th>
<th style="text-align: center;"><span class="math inline">\(\text{MEX}([path_x+1,path_x+2\cdots
n])\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">&#x5148;&#x524D;</td>
<td style="text-align: center;"><span class="math inline">\(5\)</span></td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
<td style="text-align: center;"><span class="math inline">\(3\)</span></td>
<td style="text-align: center;"><span class="math inline">\(1\)</span></td>
<td style="text-align: center;"><span class="math inline">\(0\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;">&#x79FB;&#x52A8;&#x540E;&#xFF08;&#x5DE6;&#x79FB;&#xFF09;</td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
<td style="text-align: center;"><span class="math inline">\(5\)</span></td>
<td style="text-align: center;"><span class="math inline">\(3\)</span></td>
<td style="text-align: center;"><span class="math inline">\(1\)</span></td>
<td style="text-align: center;"><span class="math inline">\(0\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;">&#x79FB;&#x52A8;&#x540E;&#xFF08;&#x53F3;&#x79FB;&#xFF09;</td>
<td style="text-align: center;"><span class="math inline">\(5\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
<td style="text-align: center;"><span class="math inline">\(3\)</span></td>
<td style="text-align: center;"><span class="math inline">\(1\)</span></td>
<td style="text-align: center;"><span class="math inline">\(0\)</span></td>
<td style="text-align: center;"><span class="math inline">\(2\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
<td style="text-align: center;"><span class="math inline">\(4\)</span></td>
</tr>
</tbody>
</table>
<h5 id="&#x5F53;-path_xrp-&#x65F6;">&#x5F53; <span class="math inline">\(path_x&gt;rp\)</span> &#x65F6;&#xFF1A;</h5>
<p>&#x7C7B;&#x4F3C;&#x4E8E; <span class="math inline">\(path_x&lt;lp\)</span>&#xFF0C;&#x4EFB;&#x4F55;&#x5411;&#x5DE6;&#x79FB;&#x53F3;&#x79FB;&#x90FD;&#x662F;&#x4E0D;&#x88AB;&#x5141;&#x8BB8;&#x7684;&#x3002;<del>&#xFF08;&#x8DDF;&#x4E0A;&#x9762;&#x63A8;&#x5BFC;&#x8FC7;&#x7A0B;&#x5F88;&#x50CF;&#x5E94;&#x8BE5;&#x4E0D;&#x7528;&#x5199;&#x4E86;&#x5427;&#xFF09;</del></p>
<h3 id="&#x4EE3;&#x7801;">&#x4EE3;&#x7801;</h3>
<p><del>&#x7B80;&#x6D01;&#x660E;&#x4E86;&#xFF0C;&#x4E0E;&#x524D;&#x9762;&#x683C;&#x683C;&#x4E0D;&#x5165;</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;sto shs orz&quot;</span>)<span class="comment">//&#x7A81;&#x7136;&#x53D1;&#x73B0;&#x8FD9;&#x633A;&#x5BF9;&#x79F0;&#xFF08;&#x4E0D;&#x662F; </span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">read</span>(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		<span class="built_in">read</span>(x);</span><br><span class="line">		past[x]=i;</span><br><span class="line">	}</span><br><span class="line">	ll ans=<span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> l=<span class="number">0x7fffffff</span>,r=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++){</span><br><span class="line">		<span class="keyword">if</span>(past[i]&gt;l&amp;past[i]&lt;r)ans=ans*(r-l+<span class="number">1</span>-i)%mod;</span><br><span class="line">		l=<span class="built_in">min</span>(l,past[i]),r=<span class="built_in">max</span>(r,past[i]);</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p><span class="math inline">\(\text{finish}\)</span></p>
]]></content>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1697C题解</title>
    <url>/oi_blogs/2022/06/18/CF1697C%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1697/problem/C">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p>&#x7ED3;&#x5408;&#x9898;&#x76EE;&#x53D1;&#x73B0;&#xFF0C; <code>a</code> &#x53EA;&#x80FD;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#xFF0C;<code>c</code>
&#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</p>
<p>&#x8FDB;&#x4E00;&#x6B65;&#x89C2;&#x5BDF;&#x53D1;&#x73B0;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x8C03;&#x6362;&#xFF0C;&#x53EA;&#x8C03;&#x6362; <code>a,b</code> &#x6216;
<code>b,c</code> &#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x4E0D;&#x8C03;&#x6362; <code>a,c</code>
&#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#x3002;<span id="more"></span></p>
<p>&#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5982;&#x679C; <span class="math inline">\(s\)</span> &#x80FD;&#x8C03;&#x6362;&#x6210; <span class="math inline">\(t\)</span>&#xFF1A;</p>
<ul>
<li>&#x628A; <span class="math inline">\(s\)</span> &#x548C; <span class="math inline">\(t\)</span> &#x4E2D;&#x5168;&#x90E8;&#x7684; <code>b</code> &#x90FD;&#x5220;&#x6389; &#x5219; <span class="math inline">\(s=t\)</span>&#x3002;</li>
</ul>
<p>&#x7531;&#x4E8E; <code>a</code> &#x53EA;&#x80FD;&#x5411;&#x540E;&#x79FB;&#x52A8;&#xFF0C;<code>c</code> &#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</p>
<ul>
<li>&#x5728; <span class="math inline">\(t\)</span> &#x4E2D;&#xFF0C;&#x76F8;&#x540C;&#x7684; <code>a</code>
&#x4E00;&#x5B9A;&#x5728; <span class="math inline">\(s\)</span> &#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x540E;&#x9762;&#xFF0C;&#x76F8;&#x540C;&#x7684;
<code>c</code> &#x4E00;&#x5B9A;&#x5728; <span class="math inline">\(s\)</span>
&#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x524D;&#x9762;&#x3002;</li>
</ul>
<p>&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x5219;&#x4E0D;&#x80FD;&#x8C03;&#x6362;&#x6210; <span class="math inline">\(t\)</span>&#x3002;</p>
<p><del>&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x5199;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x3002;</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;shsyyds&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    std::string s,t;</span><br><span class="line">    std::cin&gt;&gt;s;</span><br><span class="line">    std::cin&gt;&gt;t;</span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sb=<span class="number">0</span>,sb2=<span class="number">0</span>;<span class="comment">//sum of &apos;b&apos;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++){</span><br><span class="line">        <span class="keyword">while</span>(t[j]==<span class="string">&apos;b&apos;</span>)sb2++,j++;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&apos;b&apos;</span>){sb++;<span class="keyword">continue</span>;}</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=t[j]||s[i]==<span class="string">&apos;a&apos;</span>&amp;&amp;i&gt;j||s[i]==<span class="string">&apos;c&apos;</span>&amp;&amp;i&lt;j){</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        j++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span>(t[j]==<span class="string">&apos;b&apos;</span>)sb2++,j++;</span><br><span class="line">    <span class="keyword">if</span>(sb!=sb2){</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1690D题解</title>
    <url>/oi_blogs/2022/06/12/CF1690D%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1690/D">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<h3 id="&#x9898;&#x610F;">&#x9898;&#x610F;</h3>
<p>&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(k\)</span>
&#x533A;&#x95F4;&#xFF0C;&#x4F7F;&#x5F97;&#x533A;&#x95F4;&#x4E2D;&#x767D;&#x8272;&#x65B9;&#x5757;&#x5C3D;&#x53EF;&#x80FD;&#x5C11;&#xFF0C;&#x8F93;&#x51FA;&#x6700;&#x5C11;&#x533A;&#x95F4;&#x7684;&#x767D;&#x8272;&#x65B9;&#x5757;&#x6570;&#x91CF;&#x3002;</p>
<h3 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;</h3>
<p>&#x5C06; <code>W</code> &#x6539;&#x4E3A; <span class="math inline">\(1\)</span>&#xFF0C;&#x5C06;
<code>B</code> &#x6539;&#x4E3A; <span class="math inline">\(0\)</span>&#xFF0C;&#x5B58;&#x50A8;&#x5728; <span class="math inline">\(a\)</span> &#x6570;&#x7EC4;&#x5F53;&#x4E2D;&#x3002;</p>
<p>&#x66B4;&#x529B;&#x679A;&#x4E3E;&#x627E;&#x5230;</p>
<p><span class="math display">\[\min_{1\le i\le
n-k}\sum_{j=i}^{i+k}a_i\]</span></p>
<p>&#x5373;&#x53EF;&#x3002;</p>
<p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A; <span class="math inline">\(O((n-k)\times
k)\)</span></p>
<span id="more"></span>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;shsyyds&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="type">int</span> sum[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&apos;W&apos;</span>)sum[i]=sum[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> sum[i]=sum[i<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> ans=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n-k;i++){</span><br><span class="line">        ans=<span class="built_in">min</span>(ans,sum[i+k]-sum[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>暴力</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1687A题解</title>
    <url>/oi_blogs/2022/06/07/CF1687A%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1687/A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p>&#x5C06;&#x6B64;&#x95EE;&#x9898;&#x62C6;&#x5206;&#x6210; <span class="math inline">\(2\)</span>
&#x5C0F;&#x9898;&#x6765;&#x89E3;&#x7B54;&#x3002;</p>
<ol type="1">
<li>&#x6C42; <span class="math inline">\(a\)</span> &#x6570;&#x7EC4;&#x4E2D;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(k\)</span> &#x7684;&#x548C;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;&#xFF08;<span class="math inline">\(k\ge n\)</span> &#x65F6; &#x4E0D;&#x9700;&#x8003;&#x8651;&#x6B64;&#x95EE;&#x9898;&#xFF09;</li>
<li>&#x6C42;&#x5728; <span class="math inline">\(k\)</span>
&#x7684;&#x65F6;&#x95F4;&#x91CC;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x5F97;<strong>&#x6240;&#x6709;&#x4F4D;&#x7F6E;&#x88AB;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x904D;&#x5386;&#x5230;&#x7684;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;</strong>&#x3002;</li>
</ol>
<span id="more"></span>
<h6 id="&#x5BF9;&#x4E8E;-n-k-&#x7684;&#x60C5;&#x51B5;">&#x5BF9;&#x4E8E; <span class="math inline">\(n&lt;
k\)</span> &#x7684;&#x60C5;&#x51B5;</h6>
<p>&#x5148;&#x8003;&#x8651;&#x7B2C;&#x4E8C;&#x4E2A;&#x5C0F;&#x95EE;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x88AB;&#x91CD;&#x590D;&#x904D;&#x5386;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x4F1A;&#x6D6A;&#x8D39;&#x6389;&#x4E0A;&#x6B21;&#x904D;&#x5386;&#x5B8C;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x4F7F;&#x5F97;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;&#xFF0C;&#x6545;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x91CD;&#x590D;&#x904D;&#x5386;&#x4E0D;&#x53EF;&#x53D6;&#x3002;</p>
<p>&#x6545;&#x7B54;&#x6848;&#x4FBF;&#x662F;&#xFF1A;</p>
<p><span class="math display">\[\max\limits_{1\le i\le
n-k}(\sum\limits^{i+k}_{j=i}a_j)+\sum\limits_{i=0}^{k-1}i\]</span></p>
<h6 id="&#x5BF9;&#x4E8E;-nge-k-&#x7684;&#x60C5;&#x51B5;">&#x5BF9;&#x4E8E; <span class="math inline">\(n\ge
k\)</span> &#x7684;&#x60C5;&#x51B5;&#xFF1A;</h6>
<p>&#x7531;&#x4E8E; <span class="math inline">\(n\ge
k\)</span>&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x8003;&#x8651;&#x7B2C;&#x4E00;&#x5C0F;&#x95EE;&#xFF0C;&#x8F6C;&#x800C;&#x8003;&#x8651;&#x7B2C;&#x4E8C;&#x5C0F;&#x95EE;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x6EE1;&#x8DB3;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6700;&#x540E; <span class="math inline">\(n\)</span>
&#x79D2;&#x5185;&#x5C06;&#x6240;&#x6709;&#x6570;&#x90FD;&#x904D;&#x5386;&#x4E00;&#x904D;&#x3002;&#x6240;&#x4EE5;&#x4ECE;<strong>&#x5DE6;&#x5230;&#x53F3;&#x6216;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x4E00;&#x5B9A;&#x6240;&#x904D;&#x5386;&#x5230;&#x7684;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x4E00;&#x5B9A;&#x6700;&#x5927;</strong>&#x3002;</p>
<p>&#x7531;&#x4E8E;&#x53EF;&#x4EE5;&#x539F;&#x5730;&#x8D70;&#xFF0C;&#x4E0D;&#x96BE;&#x8BC1;&#x660E;&#x5728; <span class="math inline">\(n\ge
k\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x7684;&#x3002;</p>
<p>&#x6545;&#x7B54;&#x6848;&#x4FBF;&#x662F;&#xFF1A;</p>
<p><span class="math display">\[(\sum\limits_{i=1}^{n}a_i)+\sum\limits_{i=k-n}^{k-1}i\]</span></p>
<p>&#x524D;&#x4E00;&#x6BB5;&#x7528;&#x524D;&#x7F00;&#x548C;&#x5904;&#x7406;&#xFF0C;&#x540E;&#x4E00;&#x6BB5;&#x53EF;&#x7528;&#x9AD8;&#x65AF;&#x6C42;&#x548C;&#x516C;&#x5F0F;&#x5904;&#x7406;&#x3002;</p>
<p>&#x6CE8;&#x610F;&#x5230;&#x9898;&#x76EE;&#x6570;&#x636E;&#x8303;&#x56F4;&#x8F83;&#x5927;&#xFF0C;&#x9700;&#x8981;&#x5F00; <code>long long</code> &#x5904;&#x7406;&#x3002;</p>
<p><del>&#x6700;&#x540E;&#x611F;&#x8C22; cocoly &#x8BA9;&#x6211;&#x91CD;&#x5199;&#x9898;&#x89E3;&#xFF0C;sto cocoly orz</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">ll a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">    }</span><br><span class="line">    ll cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(k&lt;=n){</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=k;i&lt;=n;i++){</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,a[i]-a[i-k]);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans+(k*(k<span class="number">-1</span>)/<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[n]+k<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,((k<span class="number">-1</span>)+(k-n))*(n)/<span class="number">2</span>+ a[n]);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>分类讨论</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1688B题解</title>
    <url>/oi_blogs/2022/06/05/CF1688B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1688/B">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p>&#x5982;&#x679C;&#x7ED9;&#x51FA;&#x7684;&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x5176;&#x4E0E;&#x5176;&#x4ED6;&#x7684;&#x5076;&#x6570;&#x76F8;&#x52A0;&#x5F97;&#x5230;&#x5947;&#x6570;&#x3002;&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#x76F8;&#x52A0;&#x4E00;&#x5B9A;&#x662F;&#x6BD4;&#x5BF9;&#x5076;&#x6570;&#x9664;&#x4E8C;&#x66F4;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x6570;&#x7EC4;&#x4E2D; <span class="math inline">\(\text{lowbit}\)</span>
&#x6700;&#x5C0F;&#x7684;&#x6570;&#x5316;&#x4E3A;&#x5947;&#x6570;&#xFF0C;&#x518D;&#x6267;&#x884C;&#x4E0A;&#x9762;&#x64CD;&#x4F5C;&#x3002;</p>
<span id="more"></span>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="type">int</span> a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">31</span>;i++){</span><br><span class="line">        <span class="type">int</span> a=x&gt;&gt;i;</span><br><span class="line">        <span class="keyword">if</span>(a&amp;<span class="number">1</span>){</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> even=INF,odd=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i]&amp;<span class="number">1</span>)odd++;</span><br><span class="line">        <span class="keyword">else</span> even=<span class="built_in">min</span>(even,<span class="built_in">find</span>(a[i]));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(odd&gt;=<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n-odd);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,even+n<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1688A题解</title>
    <url>/oi_blogs/2022/06/04/CF1688A%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1688/problem/A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<h3 id="&#x9898;&#x610F;">&#x9898;&#x610F;&#xFF1A;</h3>
<p>&#x7ED9;&#x5B9A; <span class="math inline">\(x\)</span>&#xFF0C;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;</p>
<p><span class="math display">\[x\ \texttt{and}\ y&gt;0\]</span> <span class="math display">\[x\ \texttt{xor}\ y&gt;0\]</span></p>
<p>&#x7684;&#x6700;&#x5C0F;&#x6B63;&#x6574;&#x6570; <span class="math inline">\(y\)</span>&#x3002;</p>
<span id="more"></span>
<hr>
<h3 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;&#xFF1A;</h3>
<ul>
<li><p><span class="math inline">\(x\ \texttt{and}\ y&gt;0\)</span>
&#x663E;&#x7136;&#x662F; <span class="math inline">\((x)_2\)</span> &#x548C; <span class="math inline">\((y)_2\)</span> &#x5728;&#x4E8C;&#x8FDB;&#x5236;&#x4E0B;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4F4D;&#x76F8;&#x540C;&#x3002;</p></li>
<li><p><span class="math inline">\(x\ \texttt{xor}\ y&gt;0\)</span>
&#x663E;&#x7136;&#x662F; <span class="math inline">\((x)_2\)</span> &#x548C; <span class="math inline">\((y)_2\)</span> &#x5728;&#x4E8C;&#x8FDB;&#x5236;&#x4E0B;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4F4D;&#x4E0D;&#x540C;&#x3002;</p></li>
</ul>
<p>&#x8003;&#x8651;&#x5230; <span class="math inline">\(y\)</span>
&#x7684;&#x503C;&#x8981;&#x6700;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x96BE;&#x53D1;&#x73B0; <span class="math inline">\((y)_2\)</span> &#x4E0E;
<span class="math inline">\((x)_2\)</span> &#x5728;&#x76F8;&#x540C;&#x7684;&#x7684;&#x4F4D;&#x6570;&#x4EC5;&#x6709; <span class="math inline">\(1\)</span> &#x4F4D;&#x4E14;&#x4E3A; <span class="math inline">\((x)_2\)</span> &#x6700;&#x4F4E;&#x4F4D;&#x3002;</p>
<p>&#x5728;&#x524D;&#x9762;&#x5206;&#x6790;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x518D;&#x6765;&#x770B;&#x7B2C;&#x4E8C;&#x4E2A;&#x6761;&#x4EF6;&#x3002;<span class="math inline">\((x)_2\)</span> &#x4E2D;&#x6700;&#x4F4E;&#x4F4D;&#x7684; <span class="math inline">\(1\)</span> &#x4E0E; <span class="math inline">\((y)_2\)</span> &#x4E2D;&#x6700;&#x4F4E;&#x4F4D;&#x7684; <span class="math inline">\(1\)</span> &#x76F8;&#x540C;&#x5E76;&#x62B5;&#x6D88;&#xFF0C;&#x4F46;&#x5982;&#x679C; <span class="math inline">\((x)_2\)</span> &#x4E2D;&#x6709;&#x4E0D;&#x6B62;&#x4E00;&#x4E2A; <span class="math inline">\(1\)</span>&#xFF0C;&#x90A3;&#x4E48;&#x4E0E; <span class="math inline">\((y)_2\)</span> &#x5C31;&#x81F3;&#x5C11;&#x6709; <span class="math inline">\(1\)</span>
&#x4F4D;&#x4E0D;&#x540C;&#xFF0C;&#x6EE1;&#x8DB3;&#x7B2C;&#x4E8C;&#x4E2A;&#x6761;&#x4EF6;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;&#x5C31;&#x5C06;&#x5176;&#x52A0;&#x4E0A; <span class="math inline">\(1\)</span>&#xFF0C;&#x4F7F;&#x5176;&#x81F3;&#x5C11;&#x6709; <span class="math inline">\(1\)</span> &#x4F4D;&#x4E0D;&#x540C;&#x3002;&#xFF08;<strong>&#x7279;&#x522B;&#x7684;&#xFF0C;&#x5F53; <span class="math inline">\(x=1\)</span> &#x65F6;&#xFF0C;<span class="math inline">\(y=3\)</span></strong>&#xFF09;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> maxn=<span class="number">0</span>,minn=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">31</span>;i++){</span><br><span class="line">        <span class="type">int</span> a=n&gt;&gt;i;</span><br><span class="line">        <span class="keyword">if</span>(a&amp;<span class="number">1</span>){</span><br><span class="line">            maxn=i;</span><br><span class="line">            <span class="keyword">if</span>(minn==<span class="number">-1</span>)minn=i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(maxn!=minn)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="number">1</span>&lt;&lt;minn);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="number">1</span>&lt;&lt;minn)+<span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>P7685题解</title>
    <url>/oi_blogs/2022/03/17/P7865%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P7685">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p><span class="math inline">\(\color{white}\text{&#x7F51;&#x8BFE;&#x6478;&#x9C7C;&#x5199;&#x9898;&#x89E3;}\)</span></p>
<p><del>&#x4F5C;&#x4E3A; ac &#x7684;&#x7B2C;&#x4E00;&#x9053;&#x9ED1;&#x9898;&#x5F53;&#x7136;&#x8981;&#x6C34;&#x4E00;&#x7BC7;&#x9898;&#x89E3;&#x4E86;&#xFF08;&#x96FE;</del></p>
<p>&#x6CA1;&#x505A;&#x8FC7;&#x7684;&#x5EFA;&#x8BAE;&#x5148;&#x505A; <a href="https://www.luogu.com.cn/problem/solution/SP703">SP703</a>
&#x3002;&#x672C;&#x9898;&#x4E0E; <a href="https://www.luogu.com.cn/problem/P7685">P7685</a>
&#x603B;&#x4F53;&#x601D;&#x8DEF;&#x4E43;&#x81F3;&#x4EE3;&#x7801;&#x90FD;<del>&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF08;&#x5212;&#x6389;</del>&#x3002;</p>
<p>&#x8003;&#x8651;&#x4ECE; DP &#x5165;&#x624B;&#xFF0C;&#x8BBE;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#x6570;&#x91CF;&#x4E3A; <span class="math inline">\(i-1\)</span>&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5904;&#x4E8E; <span class="math inline">\(a_{i-1}\)</span> &#x4F4D;&#x7F6E;&#xFF0C;&#x8BBE;&#x53E6;&#x5916; <span class="math inline">\(2\)</span> &#x4E2A;&#x5458;&#x5DE5;&#x7684;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A; <span class="math inline">\(x,y\)</span>&#xFF0C;&#x5219;&#x63A8;&#x51FA;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;</p>
<p><span class="math display">\[f[i][x][y]=\min(f[i-1][x][y]+C(a[i-1],a[i]))\]</span></p>
<p><span class="math display">\[f[i][x][a[i-1]]=\min(f[i-1][x][y]+C(y,a[i]))\]</span></p>
<p><span class="math display">\[f[i][a[i-1]][y]=\min(f[i-1][x][y]+C(x,a[i]))\]</span></p>
<p>&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053; <span class="math inline">\(f[i-1]\)</span>
&#x6240;&#x5B58;&#x7684;&#x6570;&#xFF0C;&#x5E76;&#x4E0D;&#x5173;&#x5FC3; <span class="math inline">\(f[i-2]\)</span>
&#x4E4B;&#x524D;&#x5B58;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x7EC4;&#x3002;</p>
<p>&#x4EE5;&#x4E0A; DP &#x6C42;&#x89E3;&#x6700;&#x5C0F;&#x6210;&#x672C;&#x3002;<span id="more"></span></p>
<p>&#x5728;&#x8F6C;&#x79FB; DP
&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x5B58;&#x5728;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7684;&#x4E22;&#x5931;&#xFF0C;&#x65E0;&#x6CD5;&#x66F4;&#x597D;&#x7684;&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x6240;&#x670D;&#x52A1;&#x7684;&#x670D;&#x52A1;&#x5458;&#x662F;&#x54EA;&#x4F4D;&#x3002;</p>
<p><span class="math inline">\(\color{white}\text{&#x6211;&#x7684;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x5462;&#xFF1F;}\)</span></p>
<blockquote>
<p>&#x5728;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x65B9;&#x6848;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x505A;&#x6CD5;&#x65F6;&#x800C;&#x5916;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x4E0E; DP
&#x72B6;&#x6001;&#x5927;&#x5C0F;&#x76F8;&#x540C;&#x7684;&#x6570;&#x7EC4;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x201C;&#x6700;&#x4F18;&#x89E3;&#x201D;&#x662F;&#x4ECE;&#x4F55;&#x5904;&#x8F6C;&#x79FB;&#x800C;&#x6765;&#x7684;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5728;
DP
&#x6C42;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x540E;&#xFF0C;&#x7528;&#x8FC7;&#x4E00;&#x6B21;&#x9012;&#x5F52;&#xFF0C;&#x6CBF;&#x7740;&#x8BB0;&#x5F55;&#x7684;&#x6BCF;&#x4E00;&#x6B65;&#x201C;&#x8F6C;&#x79FB;&#x6765;&#x6E90;&#x201D;&#x56DE;&#x5230;&#x521D;&#x6001;&#xFF0C;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x6001;&#x5230;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x8F6C;&#x79FB;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6C42;&#x7684;&#x65B9;&#x6848;</p>
</blockquote>
<blockquote>
<p>&#x2014;&#x2014;&#x300A;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x300B;</p>
</blockquote>
<p>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x6BCF;&#x6B21;&#x8F6C;&#x79FB; DP &#x65F6;&#x6570;&#x7EC4;&#x6240;&#x5DEE;&#x522B;&#x7684;&#x6570;&#x636E;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;</p>
<ul>
<li><span class="math inline">\(y\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},y\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li>
<li><span class="math inline">\(x\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},x\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li>
<li>&#x4E0D;&#x53D8;&#xFF1B;</li>
</ul>
<p>&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E9B;&#x8FDB;&#x5165; DP &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x524D;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x5B58;&#x4E0B;&#x6765;&#x3002;DP
&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;&#x6240;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x53CD;&#x63A8;&#x3002;</p>
<p>&#x8BBE; <span class="math inline">\(path\)</span> &#x4E3A; DP
&#x5728;&#x76F8;&#x5E94;&#x72B6;&#x6001;&#x65F6;&#x5B58;&#x50A8;&#x4E0B;&#x6765;&#x7684;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x670D;&#x52A1;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x5F53;&#x90A3;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E4B;&#x524D;&#x670D;&#x52A1;&#x7684;&#x4F4D;&#x7F6E;&#x662F;
<span class="math inline">\(a_{i-1}\)</span>
&#x65F6;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x90A3;&#x4E2A;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x7684;&#x7F16;&#x53F7;&#x4E0D;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x5C06; <span class="math inline">\(path\)</span> &#x518D;&#x6539;&#x4E3A; <span class="math inline">\(0\)</span> &#xFF08;&#x4FBF;&#x4E8E;&#x540E;&#x671F;&#x56DE;&#x6EAF;&#xFF09;&#x3002; <span class="math inline">\(mx,my\)</span> &#x521D;&#x59CB;&#x503C;&#x4E3A;&#x7B54;&#x6848;&#x6240;&#x5728;&#x6570;&#x7EC4;&#x7684;&#x4E8C;&#x4E09;&#x7EF4;&#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">	x_[i]=mx,y_[i]=my;</span><br><span class="line">	<span class="keyword">if</span>(path[i][mx][my])a[i<span class="number">-1</span>]==mx?mx=path[i][mx][my]:my=path[i][mx][my];</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(3\)</span>
&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x7684;&#x4F4D;&#x7F6E;&#x5728; <span class="math inline">\(a_{i-1}\)</span> &#xFF0C;DP &#x673A;&#x5236;&#x4F7F;&#x5F97; <span class="math inline">\(a_{i}\)</span>
&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x3002;&#x5012;&#x63A8;&#x56DE;&#x53BB;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0; <span class="math inline">\(mx\)</span> &#x6216; $ my$ &#x662F; <span class="math inline">\(a_{i-1}\)</span> &#x5219;&#x8BF4;&#x660E; <span class="math inline">\(mx\)</span> &#x6216; <span class="math inline">\(my\)</span> &#x5728; <span class="math inline">\(i-1\)</span> &#x72B6;&#x6001;&#x65F6;&#x662F;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#xFF0C;&#x518D;&#x6839;&#x636E; <span class="math inline">\(path\)</span> &#x5012;&#x63A8;&#x56DE;&#x53BB;&#x5373;&#x53EF;&#x3002;</p>
<p>&#x904D;&#x5386;&#x7ED3;&#x675F;&#x540E;&#x518D;&#x6765;&#x4E00;&#x6B21;&#x6B63;&#x5E8F;&#x904D;&#x5386;&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x7B54;&#x6848;&#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_L 201</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_N 1001</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][MAX_L][MAX_L];</span><br><span class="line"><span class="type">int</span> a[MAX_N],c[MAX_L][MAX_L],l,n,ans,X[MAX_N],Y[MAX_N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> path[MAX_N][MAX_L][MAX_L];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=l; i++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=l; k++) {</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i][k]);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;=l; x++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;=l; y++)</span><br><span class="line">			f[<span class="number">0</span>][x][y]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">	a[<span class="number">0</span>]=<span class="number">3</span>,f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>,X[<span class="number">0</span>]=<span class="number">1</span>,Y[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line">		<span class="built_in">clean</span>(i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line">				<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]!=<span class="number">0x3f3f3f3f</span>&amp;&amp;x!=y) {</span><br><span class="line">					<span class="type">int</span> z=a[i<span class="number">-1</span>];</span><br><span class="line">					<span class="keyword">if</span>(x!=a[i]&amp;&amp;y!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][x][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i]),path[i][x][y]=<span class="number">0</span>;</span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">					<span class="keyword">if</span>(x!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][z]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][x][z]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i]),path[i][x][z]=y;</span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">					<span class="keyword">if</span>(y!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][z][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][z][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i]),path[i][z][y]=x;<span class="comment">//z&#x8981;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E0D;&#x80FD;&#x653E;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x56E0;&#x4E3A;z&#x662F;&#x4EE3;&#x66FF;x&#x7684;&#x3002; </span></span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	ans=<span class="number">0x7fffffff</span>;</span><br><span class="line">	<span class="type">int</span> mx,my;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line">			<span class="keyword">if</span>(f[n&amp;<span class="number">1</span>][x][y]&lt;ans)mx=x,my=y,ans=f[n&amp;<span class="number">1</span>][x][y];</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	a[<span class="number">0</span>]=<span class="number">3</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">		X[i]=mx,Y[i]=my;<span class="comment">//&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x7B49;&#x4E8E;a_{i-1}&#x7684;</span></span><br><span class="line">		<span class="comment">//printf(&quot;%d %d\n&quot;,mx,my);</span></span><br><span class="line">		<span class="keyword">if</span>(path[i][mx][my])(a[i<span class="number">-1</span>]==mx)?(mx=path[i][mx][my]):(my=path[i][mx][my]);</span><br><span class="line">	}</span><br><span class="line">	<span class="type">int</span> num_x=<span class="number">1</span>,num_y=<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">		<span class="keyword">if</span>(X[i]==a[i<span class="number">-1</span>])num_x= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));<span class="comment">//&#x56E0;&#x4E3A;x[i]==a[i-1]&#x6240;&#x4EE5;X[i]&#x4F1A;&#x88AB;&#x8F6C;&#x79FB;&#x5230;f&#x6570;&#x7EC4;&#x9690;&#x85CF;&#x7684;&#x90A3;&#x4E2A;&#x7EAC;&#x5EA6;&#x3002; </span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(Y[i]==a[i<span class="number">-1</span>])num_y= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>)));</span><br><span class="line">	} </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{</span><br><span class="line">	<span class="keyword">return</span> c[x][y];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span> </span>{</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;=l; k++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=l; j++) {</span><br><span class="line">			f[i&amp;<span class="number">1</span>][k][j]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1679B题解</title>
    <url>/oi_blogs/2022/05/16/CF1679B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="&#x9898;&#x610F;&#x7B80;&#x8FF0;">&#x9898;&#x610F;&#x7B80;&#x8FF0;</h3>
<p>&#x6709;&#x4E00;&#x4E32;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(n\)</span>
&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x4E00;&#x5171;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#xFF1A;</p>
<ul>
<li>&#x628A;&#x4F4D;&#x4E8E;&#x7B2C; <span class="math inline">\(i\)</span> &#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x7684;&#x503C;&#x6539;&#x4E3A;
<span class="math inline">\(x\)</span>&#x3002;</li>
<li>&#x628A;&#x6240;&#x6709;&#x7684;&#x6570;&#x90FD;&#x6539;&#x4E3A; <span class="math inline">\(x\)</span>&#x3002;</li>
</ul>
<p>&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#x7ED3;&#x675F;&#x540E;&#x8F93;&#x51FA;&#x5F53;&#x524D;&#x6570;&#x7EC4;&#x7684;&#x548C;&#x3002;</p>
<span id="more"></span>
<h3 id="&#x89E3;&#x9898;&#x601D;&#x8DEF;">&#x89E3;&#x9898;&#x601D;&#x8DEF;</h3>
<p>&#x5148;&#x628A;&#x9898;&#x76EE;&#x6240;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x7684;&#x503C;&#x8BBE;&#x4E3A; <span class="math inline">\(sum\)</span>&#x3002;&#x8F93;&#x5165;&#x540E;&#x6C42;&#x51FA;&#x6570;&#x7EC4;&#x7684;&#x603B;&#x548C;&#x653E;&#x5165; <span class="math inline">\(sum\)</span> &#x4E2D;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x7B2C; <span class="math inline">\(2\)</span>
&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x66B4;&#x529B;&#x66F4;&#x6362;&#x6240;&#x6709;&#x6570;&#x7EC4;&#x7684;&#x6570;&#x660E;&#x663E;&#x662F;&#x4E0D;&#x53EF;&#x884C;&#x7684;&#x3002;</p>
<p>&#x90A3;&#x4E48;&#x5C06;&#x6BCF;&#x4E2A;&#x6570;&#x9644;&#x52A0;&#x4E00;&#x4E2A;&#x503C; <span class="math inline">\(time\)</span>&#xFF0C;&#x64CD;&#x4F5C;&#x8981;&#x6C42;&#x8D4B;&#x7684;&#x503C;&#x4E3A; <span class="math inline">\(all\)</span>&#x3002;&#x4EE5;&#x53CA;&#x603B;&#x4F53;&#x65F6;&#x95F4; <span class="math inline">\(clock\)</span> &#x3002;&#x6BCF;&#x6267;&#x884C;&#x4E00;&#x6B21; <span class="math inline">\(2\)</span> &#x64CD;&#x4F5C;&#x5C06; <span class="math inline">\(clock++\)</span>&#xFF0C;&#x6B64;&#x65F6; <span class="math inline">\(sum=n\times all\)</span>&#x3002;</p>
<p>&#x5F53;&#x4E00;&#x4E2A;&#x6570;&#x9644;&#x52A0;&#x7684;&#x503C; <span class="math inline">\(time\ne clock\)</span>
&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x201C;&#x8FC7;&#x65F6;&#x7684;&#x201D;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x7B2C; <span class="math inline">\(1\)</span> &#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x8BBE;&#x8F93;&#x5165;&#x8FDB;&#x7684;&#x6570;&#x4E3A;
<span class="math inline">\(x\)</span>&#xFF0C;&#x68C0;&#x67E5;&#x5F53;&#x524D;&#x7684;&#x6570;&#x662F;&#x5426;&#x4E3A;&#x201C;&#x8FC7;&#x65F6;&#x7684;&#x201D;&#xFF0C;&#x5982;&#x679C;&#x8FC7;&#x65F6;&#xFF0C;&#x90A3;&#x4E48;&#x5F53;&#x524D;&#x8FD9;&#x4E2A;&#x6570;&#x7684;&#x503C;&#x539F;&#x6765;&#x5E94;&#x4E3A;
<span class="math inline">\(all\)</span>&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(sum=all-x\)</span>&#xFF0C;&#x5E76;&#x5C06;&#x503C; <span class="math inline">\(time=clock\)</span>&#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int unsigned long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{</span><br><span class="line">    <span class="type">int</span> val,time;</span><br><span class="line">} a[<span class="number">2000005</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,q,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%llu%llu&quot;</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;a[i].val);</span><br><span class="line">        sum+=a[i].val;</span><br><span class="line">        a[i].time=<span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> all=<span class="number">0</span>,num=<span class="number">0</span>;<span class="comment">//num &#x5373;&#x4E3A;&#x9898;&#x89E3;&#x4E2D;&#x7684; clock</span></span><br><span class="line">    <span class="keyword">while</span>(q--){</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>){</span><br><span class="line">            <span class="type">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%llu%llu&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="keyword">if</span>(a[x].time==num){</span><br><span class="line">                sum+=y-a[x].val,a[x].val=y;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                sum+=y-all,a[x].val=y,a[x].time=num;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%llu\n&quot;</span>,sum);</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">2</span>){</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;x);</span><br><span class="line">            sum=n*x,num++,all=x;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%llu\n&quot;</span>,sum);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>不知道是啥</tag>
      </tags>
  </entry>
  <entry>
    <title>CF1679A题解</title>
    <url>/oi_blogs/2022/05/15/CF1679A%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="&#x9898;&#x610F;&#x7B80;&#x8FF0;">&#x9898;&#x610F;&#x7B80;&#x8FF0;</h3>
<p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570; <span class="math inline">\(n\)</span> &#xFF0C;&#x6C42; <span class="math inline">\(4a+6b=n\)</span> &#x65F6; <span class="math inline">\(a+b\)</span> &#x7684;&#x6700;&#x5C0F;&#x503C;&#x548C;&#x6700;&#x5927;&#x503C;&#xFF08;<span class="math inline">\(a,b\)</span> &#x5747;&#x4E3A;&#x6574;&#x6570;&#xFF09;&#xFF0C;&#x65E0;&#x89E3;&#x65F6;&#x8F93;&#x51FA;
<code>-1</code>&#xFF0C;&#x5171;&#x6709; <span class="math inline">\(t\)</span>
&#x7EC4;&#x6570;&#x636E;&#x3002;</p>
<hr>
<h3 id="&#x89E3;&#x9898;&#x601D;&#x8DEF;">&#x89E3;&#x9898;&#x601D;&#x8DEF;</h3>
<p><span class="math inline">\(4a+6b=n\)</span> &#x53EF;&#x5316;&#x7B80;&#x4E3A; <span class="math inline">\(2a+3b=\dfrac{n}{2}\)</span>&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(n\)</span> &#x4E00;&#x5B9A;&#x662F; <span class="math inline">\(2\)</span> &#x7684;&#x500D;&#x6570;&#x4E14; <span class="math inline">\(n\ge4\)</span>&#x3002;</p>
<p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0; <span class="math inline">\(a+b\)</span> &#x6700;&#x5C0F;&#x65F6; <span class="math inline">\(a\)</span> &#x4E00;&#x5B9A;&#x6700;&#x5927;&#xFF0C;<span class="math inline">\(b\)</span> &#x4E00;&#x5B9A;&#x6700;&#x5C0F;&#xFF0C;&#x5F53; <span class="math inline">\(a+b\)</span> &#x6700;&#x5927;&#x65F6;&#x53CD;&#x4E4B;&#x3002;</p>
<p>&#x8003;&#x8651; <span class="math inline">\(n\)</span> &#x6709;&#x5982;&#x4E0B;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p>
<span id="more"></span>
<table>
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"><span class="math inline">\(n\)</span>
&#x7684;&#x60C5;&#x51B5;</th>
<th style="text-align: center;">&#x5E94;&#x5BF9;&#x65B9;&#x6CD5;</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><span class="math inline">\(n\)</span>
&#x4E3A; <span class="math inline">\(4\)</span> &#x7684;&#x500D;&#x6570;</td>
<td style="text-align: center;">&#x6700;&#x5927;&#x503C; <span class="math inline">\(\dfrac{n}{4}\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;"><span class="math inline">\(n\)</span>
&#x4E3A; <span class="math inline">\(6\)</span> &#x7684;&#x500D;&#x6570;</td>
<td style="text-align: center;">&#x6700;&#x5C0F;&#x503C;&#x53D6; <span class="math inline">\(\dfrac{n}{6}\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span class="math inline">\(n\)</span>
&#x4E3A; <span class="math inline">\(4x+2\)</span>&#xFF08;<span class="math inline">\(x\)</span> &#x4E3A;&#x6574;&#x6570;&#xFF09;</td>
<td style="text-align: center;">&#x4F7F; <span class="math inline">\(b=1\)</span>&#xFF0C;&#x5C06; <span class="math inline">\(n\)</span> &#x51CF;&#x53BB; <span class="math inline">\(1\times6\)</span> &#x5F97; <span class="math inline">\((4x+2)-6=4(x-1)\)</span>&#xFF0C;&#x6700;&#x5927;&#x503C;&#x5373;&#x4E3A; <span class="math inline">\(\dfrac{n-6}{4}+1=\)</span><span class="math inline">\(\lfloor\dfrac{n}{4}\rfloor\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;"><span class="math inline">\(n\)</span>
&#x4E3A; <span class="math inline">\(6x+2\)</span></td>
<td style="text-align: center;">&#x4F7F; <span class="math inline">\(a=2\)</span>&#xFF0C;&#x51CF;&#x53BB; <span class="math inline">\(2\times4\)</span> &#x5F97; <span class="math inline">\(6x+2-8=6(x-1)\)</span>&#xFF0C;&#x6700;&#x5C0F;&#x503C;&#x5373;&#x4E3A; <span class="math inline">\(\dfrac{n-8}{6}+2=\lfloor\dfrac{n+4}{6}\rfloor\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span class="math inline">\(n\)</span>
&#x4E3A; <span class="math inline">\(6x+4\)</span></td>
<td style="text-align: center;">&#x4F7F; <span class="math inline">\(a=1\)</span> &#xFF0C;&#x540C;&#x4E0A;&#x53EF;&#x5F97;&#x6700;&#x5C0F;&#x503C;&#x4E3A; <span class="math inline">\(\dfrac{n-4}{6}+1\)</span> &#x5728; <span class="math inline">\(n\)</span> &#x4E3A;&#x6574;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x53EF;&#x7B49;&#x4E8E; <span class="math inline">\(\lfloor \dfrac{n+4}{6}\rfloor\)</span></td>
</tr>
</tbody>
</table>
<p><strong>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(n\)</span>
&#x4E00;&#x5B9A;&#x6EE1;&#x8DB3;&#x4EE5;&#x4E0A;&#x7684;&#x7B2C; <span class="math inline">\(1,3\)</span> &#x6761;&#x4E4B;&#x4E00;&#x548C;&#x7B2C;
<span class="math inline">\(2,4,5\)</span>
&#x6761;&#x4E4B;&#x4E00;&#xFF0C;&#x5176;&#x4E2D;&#x5404;&#x5BF9;&#x5E94;&#x6700;&#x5927;&#x503C;&#x548C;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x5206;&#x522B;&#x662F; <span class="math inline">\(\lfloor\dfrac{n}{4}\rfloor\)</span> &#x548C; <span class="math inline">\(\lfloor
\dfrac{n+4}{6}\rfloor\)</span>&#x3002;</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">max</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">min</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>||n%<span class="number">2</span>==<span class="number">1</span>){<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);<span class="keyword">continue</span>;}</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,(n+<span class="number">4</span>)/<span class="number">6</span>,n/<span class="number">4</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>cf1651B题解</title>
    <url>/oi_blogs/2022/03/21/cf1651b%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<hr>
<p><a href="https://www.luogu.com.cn/problem/CF1651B">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p>&#x8BBE; <span class="math inline">\(a_1=1\)</span> &#xFF0C;&#x5219; <span class="math inline">\(a_n\ge 3^{n}\)</span> &#x3002;</p>
<p>&#x5DF2;&#x77E5; <span class="math inline">\(2\times|a_i-a_j| \ge
a_i+a_j\)</span></p>
<p>&#x4E0D;&#x59A8;&#x8BBE; <span class="math inline">\(a_i\ge a_j.\)</span></p>
<p>&#x5F97; <span class="math inline">\(2\times a_i-2\times a_j\ge
a_i+a_j\)</span></p>
<p>&#x5F97; <span class="math inline">\(a_i\ge 3\times a_j\)</span> &#xFF0C;&#x7B26;&#x5408;
<span class="math inline">\(a_i\ge a_j\)</span> &#x3002;</p>
<span id="more"></span>
<p><span class="math display">\[
\begin{align*}
\begin{split}
\because \left \{
\begin{array}{l}
a_i\le10^9\\
a_n\ge3^n\\
a_i\ge 3\times a_j
\end{array}
\right.
\end{split}
\end{align*}
\]</span></p>
<p><span class="math inline">\(\therefore n&lt;20\)</span></p>
<p>&#x6240;&#x4EE5;&#x5728; <span class="math inline">\(n\ge20\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x65E0;&#x89E3;&#x3002;</p>
<p><span class="math inline">\(n\le19\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x53EA;&#x9700;&#x8981;&#x8BBE; <span class="math inline">\(a_1=1\)</span>&#x3002;</p>
<p>&#x5176;&#x4F59; <span class="math inline">\(a_i=a_{i-1}\times3(i\ne1,i\le
n)\)</span> &#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--) {</span><br><span class="line">		<span class="type">int</span> n;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">		<span class="keyword">if</span>(n&gt;=<span class="number">20</span>) {</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		}</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">		<span class="type">int</span> a=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(a*=<span class="number">3</span>)/<span class="number">3</span>);</span><br><span class="line">		}</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>cf1651a</title>
    <url>/oi_blogs/2022/03/21/cf1651a/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1651A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<h3 id="&#x9898;&#x610F;&#x7FFB;&#x8BD1;">&#x9898;&#x610F;&#x7FFB;&#x8BD1;&#xFF1A;</h3>
<p>&#x4E00;&#x4E2A;&#x6709; <span class="math inline">\(n\)</span>
&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x6BD4;&#x8D5B;&#xFF0C;&#x6BCF;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;&#x6DD8;&#x6C70; <span class="math inline">\(1\)</span>
&#x652F;&#x961F;&#x4F0D;&#xFF0C;&#x6DD8;&#x6C70;&#x7684;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li><p>&#x5F53;&#x4E24;&#x652F;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x662F;&#x5076;&#x6570;&#x65F6;&#xFF0C;&#x6DD8;&#x6C70;&#x7F16;&#x53F7;&#x8F83;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x961F;&#x4F0D;&#x3002;</p></li>
<li><p>&#x5F53;&#x4E24;&#x652F;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x662F;&#x5947;&#x6570;&#x65F6;&#xFF0C;&#x6DD8;&#x6C70;&#x7F16;&#x53F7;&#x8F83;&#x5927;&#x7684;&#x90A3;&#x4E2A;&#x961F;&#x4F0D;&#x3002;</p></li>
</ul>
<p>&#x4E00;&#x5F00;&#x59CB;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x90FD;&#x662F;&#x6309;&#x987A;&#x5E8F;&#x6392;&#x5217;&#x7684;&#x3002;</p>
<p>&#x53C2;&#x89C1; <img src="/oi_blogs/2022/03/21/cf1651a/1.png" alt="&#x9898;&#x76EE;&#x7684;&#x56FE;"></p>
<span id="more"></span>
<h3 id="&#x89E3;&#x9898;&#x65B9;&#x6CD5;">&#x89E3;&#x9898;&#x65B9;&#x6CD5;</h3>
<p>&#x5206;&#x6790;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x6240;&#x6709;&#x7EC4;&#x7684;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x90FD;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x8F83;&#x5927;&#x7684;&#x961F;&#x4F0D;&#x6DD8;&#x6C70;&#xFF0C;&#x56E0;&#x4E3A;&#x8F83;&#x5927;&#x7684;&#x961F;&#x4F0D;&#x4E00;&#x5B9A;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;&#x6BCF;&#x7EC4;&#x90FD;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5947;&#x6570;&#x52A0;&#x5947;&#x6570;&#x4E00;&#x5B9A;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x76F4;&#x6DD8;&#x6C70;&#x8F83;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x7B54;&#x6848;&#x5C31;&#x662F;&#x7F16;&#x53F7;&#x4E3A;&#x6700;&#x5927;&#x7684;&#x5947;&#x6570;&#x7684;&#x961F;&#x4F0D;&#x4E86;&#x3002;&#x56E0;&#x4E3A;&#x7F16;&#x53F7;&#x6700;&#x5927;&#x5230;
<span class="math inline">\(2^n\)</span> &#x6240;&#x4EE5;&#x7B54;&#x6848;&#x5C31;&#x662F; <span class="math inline">\(2^n-1\)</span> &#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="number">1</span>&lt;&lt;a)<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>优先队列简介</title>
    <url>/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;">&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;</h1>
<p>&#x5982;&#x679C;&#x8F93;&#x5165; <span class="math inline">\(6\)</span> &#x4E2A;&#x6570;&#xFF1A;<span class="math inline">\(3&#xFF0C;1&#xFF0C;9&#xFF0C;5&#xFF0C;11&#xFF0C;0\)</span></p>
<p>&#x666E;&#x901A;&#x7684;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<span id="more"></span>
<p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/1.png"></p>
<p>&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/2.png"></p>
<p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x51FA;&#x961F;&#x987A;&#x5E8F;&#x662F;<strong>&#x4ECE;&#x5927;&#x5230;&#x5C0F;</strong></p>
<p>&#x7136;&#x800C;&#xFF0C;&#x8FD9;&#x9053;&#x9898;&#x8981;&#x6C42;&#x7684;&#x662F;&#x8BA9;&#x5E72;&#x8349;&#x5305;&#x6570;&#x91CF;<strong>&#x6700;&#x5C11;</strong>&#xFF0C;&#x90A3;&#x4E48;&#x51FA;&#x961F;&#x987A;&#x5E8F;&#x5E94;&#x8BE5;&#x662F;<strong>&#x4ECE;&#x5C0F;&#x5F80;&#x5927;</strong>
&#x3002;&#x90A3;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;</p>
<ul>
<li>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x5C06;&#x8981;&#x5165;&#x961F;&#x7684;&#x6570;&#x7684;<strong>&#x76F8;&#x53CD;&#x6570;</strong>&#x63D2;&#x5165;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x53D6;&#x51FA;&#x6765;&#x65F6;&#xFF0C;&#x518D;&#x628A;&#x4ED6;&#x53D6;&#x76F8;&#x53CD;&#x6570;&#x53D8;&#x56DE;&#x539F;&#x6765;&#x7684;&#x5143;&#x7D20;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x628A;&#x5C0F;&#x7684;&#x653E;&#x5728;&#x961F;&#x5934;&#x3002;&#x5C31;&#x50CF;&#x8FD9;&#x6837;&#xFF1A;</li>
</ul>
<p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/3.png"></p>
<p>&#x4F46;&#x7528;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x3002;&#x5C31;&#x4E0D;&#x80FD;&#x7528;&#x521A;&#x521A;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x4E0D;&#x81EA;&#x5E26;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x6392;&#x5E8F;&#x7684;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{<span class="type">int</span> a ,<span class="type">int</span> b};</span><br><span class="line"></span><br><span class="line">priority_queue&lt;Node&gt;q;<span class="comment">//&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>&#x66F4;&#x4E3A;&#x901A;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x91CD;&#x8F7D;&#x201C;&#x5C0F;&#x4E8E;&#x53F7;&#x201D;&#x5F53;&#x4F5C;&#x201C;&#x5927;&#x4E8E;&#x53F7;&#x201D;&#x6765;&#x7F16;&#x5199;&#x51FD;&#x6570;</strong>,&#x5982;&#xFF1A;
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node &amp;a,<span class="type">const</span> Node &amp;b){<span class="keyword">return</span> a.a&gt;b.a;}</span><br></pre></td></tr></table></figure></li>
<li>&#x8FD9;&#x6837; priority_queue
&#x4F1A;&#x8BA4;&#x4E3A;&#x201C;&#x5927;&#x201D;&#x7684;&#x66F4;&#x201C;&#x5C0F;&#x201D;&#xFF0C;&#x201C;&#x5C0F;&#x201D;&#x7684;&#x66F4;&#x201C;&#x5927;&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x3002;</li>
</ul>
<h3 id="&#x987A;&#x5E8F;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x4E86;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x600E;&#x4E48;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;">&#x987A;&#x5E8F;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x600E;&#x4E48;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;&#x3002;</h3>
<p>&#x65E2;&#x7136;&#x77E5;&#x9053;&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/4.png"></p>
<p>&#x90A3;&#x4E48;&#x5982;&#x679C;&#x8981;&#x5220;&#x53BB;<strong>&#x4E2D;&#x95F4;</strong>&#x7684; <span class="math inline">\(5\)</span> &#x8981;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;</p>
<ol type="1">
<li><p><strong>&#x6700;&#x6734;&#x7D20;</strong>&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x4E00;&#x4E2A;&#x4E2A;&#x51FA;&#x961F;&#xFF0C;&#x7136;&#x540E;&#x5165;&#x961F;&#xFF0C;&#x77E5;&#x9053;&#x627E;&#x5230;5&#x4E3A;&#x6B62;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x591A;&#x4ECB;&#x7ECD;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;
<span class="math inline">\(\theta(n \log n)\)</span></p></li>
<li><p>&#x5148;&#x628A;&#x8981;&#x5220;&#x7684;&#x6570;&#x5B58;&#x5230;&#x4E00;&#x4E2A;<strong>&#x6570;&#x7EC4;&#x6216;&#x961F;&#x5217;</strong>&#x91CC;&#xFF0C;&#x7B49;&#x5230;&#x53D6;&#x51FA;&#x6765;&#x65F6;&#x5728;&#x6BD4;&#x5BF9;&#x8BE5;&#x6570;&#x662F;&#x5426;&#x5DF2;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x5982;&#x5426;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x662F;&#xFF0C;&#x4ECE;&#x65B0;&#x53D6;&#x6570;&#x3002;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;
<span class="math inline">\(\theta(n)\)</span></p></li>
</ol>
<p><em>&#x672C;&#x7247;&#x53C2;&#x8003;&#x4E66;&#x7C4D;&#xFF1A; &#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x2014;&#x2014;&#x4F5C;&#x8005;&#xFF1A;&#x674E;&#x715C;&#x4E1C;</em></p>
]]></content>
      <tags>
        <tag>优先队列</tag>
      </tags>
  </entry>
  <entry>
    <title>SP5638</title>
    <url>/oi_blogs/2022/05/12/SP5638/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/SP5638">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<p><span class="math inline">\(\color{white}\text{&#x7F51;&#x8BFE;&#x6478;&#x9C7C;&#x5199;&#x9898;&#x89E3;}\)</span></p>
<p><del>&#x4F5C;&#x4E3A; ac &#x7684;&#x7B2C;&#x4E00;&#x9053;&#x9ED1;&#x9898;&#x5F53;&#x7136;&#x8981;&#x6C34;&#x4E00;&#x7BC7;&#x9898;&#x89E3;&#x4E86;&#xFF08;&#x96FE;</del></p>
<p>&#x6CA1;&#x505A;&#x8FC7;&#x7684;&#x5EFA;&#x8BAE;&#x5148;&#x505A; <a href="https://www.luogu.com.cn/problem/solution/SP703">SP703</a>&#x3002;&#x672C;&#x9898;&#x4E0E;
<a href="https://www.luogu.com.cn/problem/P7685">P7685</a>
&#x603B;&#x4F53;&#x601D;&#x8DEF;&#x4E43;&#x81F3;&#x4EE3;&#x7801;&#x90FD;<del>&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF08;&#x5212;&#x6389;</del>&#x3002;</p>
<p>&#x8003;&#x8651;&#x4ECE; DP &#x5165;&#x624B;&#xFF0C;&#x8BBE;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#x6570;&#x91CF;&#x4E3A; <span class="math inline">\(i-1\)</span>&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5904;&#x4E8E; <span class="math inline">\(a_{i-1}\)</span> &#x4F4D;&#x7F6E;&#xFF0C;&#x8BBE;&#x53E6;&#x5916; <span class="math inline">\(2\)</span> &#x4E2A;&#x5458;&#x5DE5;&#x7684;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A; <span class="math inline">\(x,y\)</span>&#xFF0C;&#x5219;&#x63A8;&#x51FA;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;</p>
<p><span class="math display">\[f[i][x][y]=\min(f[i-1][x][y]+C(a[i-1],a[i]))\]</span></p>
<p><span class="math display">\[f[i][x][a[i-1]]=\min(f[i-1][x][y]+C(y,a[i]))\]</span></p>
<p><span class="math display">\[f[i][a[i-1]][y]=\min(f[i-1][x][y]+C(x,a[i]))\]</span></p>
<p>&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053; <span class="math inline">\(f[i-1]\)</span>
&#x6240;&#x5B58;&#x7684;&#x6570;&#xFF0C;&#x5E76;&#x4E0D;&#x5173;&#x5FC3; <span class="math inline">\(f[i-2]\)</span>
&#x4E4B;&#x524D;&#x5B58;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x7EC4;&#x3002;</p>
<p>&#x4EE5;&#x4E0A; DP &#x6C42;&#x89E3;&#x6700;&#x5C0F;&#x6210;&#x672C;&#x3002;<span id="more"></span></p>
<p>&#x5728;&#x8F6C;&#x79FB; DP
&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x5B58;&#x5728;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7684;&#x4E22;&#x5931;&#xFF0C;&#x65E0;&#x6CD5;&#x66F4;&#x597D;&#x7684;&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x6240;&#x670D;&#x52A1;&#x7684;&#x670D;&#x52A1;&#x5458;&#x662F;&#x54EA;&#x4F4D;&#x3002;</p>
<p><span class="math inline">\(\color{white}\text{&#x6211;&#x7684;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x5462;&#xFF1F;}\)</span></p>
<blockquote>
<p>&#x5728;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x65B9;&#x6848;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x505A;&#x6CD5;&#x65F6;&#x800C;&#x5916;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x4E0E; DP
&#x72B6;&#x6001;&#x5927;&#x5C0F;&#x76F8;&#x540C;&#x7684;&#x6570;&#x7EC4;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x201C;&#x6700;&#x4F18;&#x89E3;&#x201D;&#x662F;&#x4ECE;&#x4F55;&#x5904;&#x8F6C;&#x79FB;&#x800C;&#x6765;&#x7684;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5728;
DP
&#x6C42;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x540E;&#xFF0C;&#x7528;&#x8FC7;&#x4E00;&#x6B21;&#x9012;&#x5F52;&#xFF0C;&#x6CBF;&#x7740;&#x8BB0;&#x5F55;&#x7684;&#x6BCF;&#x4E00;&#x6B65;&#x201C;&#x8F6C;&#x79FB;&#x6765;&#x6E90;&#x201D;&#x56DE;&#x5230;&#x521D;&#x6001;&#xFF0C;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x6001;&#x5230;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x8F6C;&#x79FB;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6C42;&#x7684;&#x65B9;&#x6848;</p>
</blockquote>
<blockquote>
<p>&#x2014;&#x2014;&#x300A;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x300B;</p>
</blockquote>
<p>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x6BCF;&#x6B21;&#x8F6C;&#x79FB; DP &#x65F6;&#x6570;&#x7EC4;&#x6240;&#x5DEE;&#x522B;&#x7684;&#x6570;&#x636E;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;</p>
<ul>
<li><span class="math inline">\(y\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},y\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li>
<li><span class="math inline">\(x\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},x\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li>
<li>&#x4E0D;&#x53D8;&#xFF1B;</li>
</ul>
<p>&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E9B;&#x8FDB;&#x5165; DP &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x524D;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x5B58;&#x4E0B;&#x6765;&#x3002;DP
&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;&#x6240;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x53CD;&#x63A8;&#x3002;</p>
<p>&#x8BBE; <span class="math inline">\(path\)</span> &#x4E3A; DP
&#x5728;&#x76F8;&#x5E94;&#x72B6;&#x6001;&#x65F6;&#x5B58;&#x50A8;&#x4E0B;&#x6765;&#x7684;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x670D;&#x52A1;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x5F53;&#x90A3;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E4B;&#x524D;&#x670D;&#x52A1;&#x7684;&#x4F4D;&#x7F6E;&#x662F;
<span class="math inline">\(a_{i-1}\)</span>
&#x65F6;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x90A3;&#x4E2A;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x7684;&#x7F16;&#x53F7;&#x4E0D;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x5C06; <span class="math inline">\(path\)</span> &#x518D;&#x6539;&#x4E3A; <span class="math inline">\(0\)</span> &#xFF08;&#x4FBF;&#x4E8E;&#x540E;&#x671F;&#x56DE;&#x6EAF;&#xFF09;&#x3002; <span class="math inline">\(mx,my\)</span> &#x521D;&#x59CB;&#x503C;&#x4E3A;&#x7B54;&#x6848;&#x6240;&#x5728;&#x6570;&#x7EC4;&#x7684;&#x4E8C;&#x4E09;&#x7EF4;&#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">	x_[i]=mx,y_[i]=my;</span><br><span class="line">	<span class="keyword">if</span>(path[i][mx][my])a[i<span class="number">-1</span>]==mx?mx=path[i][mx][my]:my=path[i][mx][my];</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(3\)</span>
&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x7684;&#x4F4D;&#x7F6E;&#x5728; <span class="math inline">\(a_{i-1}\)</span> &#xFF0C;DP &#x673A;&#x5236;&#x4F7F;&#x5F97; <span class="math inline">\(a_{i}\)</span>
&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x3002;&#x5012;&#x63A8;&#x56DE;&#x53BB;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0; <span class="math inline">\(mx\)</span> &#x6216; $ my$ &#x662F; <span class="math inline">\(a_{i-1}\)</span> &#x5219;&#x8BF4;&#x660E; <span class="math inline">\(mx\)</span> &#x6216; <span class="math inline">\(my\)</span> &#x5728; <span class="math inline">\(i-1\)</span> &#x72B6;&#x6001;&#x65F6;&#x662F;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#xFF0C;&#x518D;&#x6839;&#x636E; <span class="math inline">\(path\)</span> &#x5012;&#x63A8;&#x56DE;&#x53BB;&#x5373;&#x53EF;&#x3002;</p>
<p>&#x904D;&#x5386;&#x7ED3;&#x675F;&#x540E;&#x518D;&#x6765;&#x4E00;&#x6B21;&#x6B63;&#x5E8F;&#x904D;&#x5386;&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x7B54;&#x6848;&#x3002;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_L 301</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_N 3001</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][MAX_L][MAX_L];</span><br><span class="line"><span class="type">int</span> a[MAX_N],c[MAX_L][MAX_L],l,n,ans,X[MAX_N],Y[MAX_N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> path[MAX_N][MAX_L][MAX_L];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=l; i++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=l; k++) {</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i][k]);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;=l; x++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;=l; y++)</span><br><span class="line">			f[<span class="number">0</span>][x][y]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">	a[<span class="number">0</span>]=<span class="number">3</span>,f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>,X[<span class="number">0</span>]=<span class="number">1</span>,Y[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line">		<span class="built_in">clean</span>(i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line">				<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]!=<span class="number">0x3f3f3f3f</span>&amp;&amp;x!=y) {</span><br><span class="line">					<span class="type">int</span> z=a[i<span class="number">-1</span>];</span><br><span class="line">					<span class="keyword">if</span>(x!=a[i]&amp;&amp;y!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][x][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i]),path[i][x][y]=<span class="number">0</span>;</span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">					<span class="keyword">if</span>(x!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][z]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][x][z]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i]),path[i][x][z]=y;</span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">					<span class="keyword">if</span>(y!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line">						<span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][z][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i])) {</span><br><span class="line">							f[i&amp;<span class="number">1</span>][z][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i]),path[i][z][y]=x;<span class="comment">//z&#x8981;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E0D;&#x80FD;&#x653E;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x56E0;&#x4E3A;z&#x662F;&#x4EE3;&#x66FF;x&#x7684;&#x3002; </span></span><br><span class="line">						}</span><br><span class="line">					}</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	ans=<span class="number">0x7fffffff</span>;</span><br><span class="line">	<span class="type">int</span> mx,my;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line">			<span class="keyword">if</span>(f[n&amp;<span class="number">1</span>][x][y]&lt;ans)mx=x,my=y,ans=f[n&amp;<span class="number">1</span>][x][y];</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	a[<span class="number">0</span>]=<span class="number">3</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">		X[i]=mx,Y[i]=my;<span class="comment">//&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x7B49;&#x4E8E;a_{i-1}&#x7684;</span></span><br><span class="line">		<span class="comment">//printf(&quot;%d %d\n&quot;,mx,my);</span></span><br><span class="line">		<span class="keyword">if</span>(path[i][mx][my])(a[i<span class="number">-1</span>]==mx)?(mx=path[i][mx][my]):(my=path[i][mx][my]);</span><br><span class="line">	}</span><br><span class="line">	<span class="type">int</span> num_x=<span class="number">1</span>,num_y=<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">		<span class="keyword">if</span>(X[i]==a[i<span class="number">-1</span>])num_x= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));<span class="comment">//&#x56E0;&#x4E3A;x[i]==a[i-1]&#x6240;&#x4EE5;X[i]&#x4F1A;&#x88AB;&#x8F6C;&#x79FB;&#x5230;f&#x6570;&#x7EC4;&#x9690;&#x85CF;&#x7684;&#x90A3;&#x4E2A;&#x7EAC;&#x5EA6;&#x3002; </span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(Y[i]==a[i<span class="number">-1</span>])num_y= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>)));</span><br><span class="line">	} </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{</span><br><span class="line">	<span class="keyword">return</span> c[x][y];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span> </span>{</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;=l; k++) {</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=l; j++) {</span><br><span class="line">			f[i&amp;<span class="number">1</span>][k][j]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>P1849_[USACO12MAR]Tractor_S题解</title>
    <url>/oi_blogs/2022/04/05/P1849-USACO12MAR-Tractor-S%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1849">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p>
<h2 id="&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;">&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;</h2>
<p>&#x56E0;&#x4E3A;&#x672C;&#x9898;&#x89E3;&#x4E3A;&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x77E5;&#x9053;&#x6216;&#x4E0D;&#x4E86;&#x89E3;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x6982;&#x5FF5;&#x6216;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x7684;&#x8BF7;<a href="https://by505244.github.io/oi_blogs/2022/05/11/&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;/">&#x70B9;&#x51FB;&#x8FD9;&#x91CC;</a>&#x3002;</p>
<span id="more"></span>
<hr>
<h3 id="&#x4EE3;&#x7801;&#x601D;&#x8DEF;"><strong>&#x4EE3;&#x7801;&#x601D;&#x8DEF;</strong></h3>
<ol type="1">
<li>&#x91CD;&#x8F7D;&#x201C;&lt;&quot;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x5B9E;&#x73B0;&#x5C0F;&#x6839;&#x4E8C;&#x53C9;&#x5806;&#xFF08;&#x5373;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x4F18;&#x5148;&#x961F;&#x5217;&#xFF09;&#x4E14;&#x8BA9; <span class="math inline">\(sum\)</span>&#xFF08;&#x9700;&#x8981;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#xFF09;<strong>&#x6700;&#x5C11;&#x7684;</strong>&#x5728;&#x5806;&#x9876;&#xFF09;</li>
<li>&#x8BFB;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5F80;&#x961F;&#x5217;&#x91CC;&#x653E;&#x4E00;&#x4E2A;&#x548C;<strong>&#x62D6;&#x62C9;&#x673A;&#x521D;&#x59CB;&#x5750;&#x6807;</strong>&#x548C;&#x6570;&#x503C;&#x4E3A;**
<span class="math inline">\(0\)</span>
**&#x7684;sum&#xFF08;&#x9700;&#x8981;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#xFF09;&#xFF0C;</li>
<li>&#x6211;&#x4EEC;&#x9996;&#x5148;&#x5224;&#x65AD;&#x961F;&#x5217;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x4E3A;&#x7A7A;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#xFF08;<strong>&#x53EA;&#x6709;&#x5728;&#x65E0;&#x7B54;&#x6848;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;</strong>&#xFF09;&#x3002;</li>
<li>&#x53D6;&#x51FA;&#x5806;&#x9876;&#x5143;&#x7D20;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#x6700;&#x5C11;&#x7684;&#xFF09;&#xFF0C;&#x5E76;&#x653E;&#x5728;&#x7ED3;&#x6784;&#x4F53; <span class="math inline">\(a\)</span> &#x5185;</li>
<li>&#x5224;&#x65AD;&#x5806;&#x9876;&#x5143;&#x7D20;&#x662F;&#x5426;&#x5230;&#x8FBE;&#x539F;&#x70B9;&#xFF0C;&#x5982;&#x662F;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x7B54;&#x6848;&#x5E76;<strong>&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#x6216;&#x76F4;&#x63A5;<code>return 0;</code></strong>&#xFF0C;&#x5426;&#xFF0C;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;&#xFF1B;</li>
<li>&#x5224;&#x65AD;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x662F;&#x5426;&#x6709;&#x5E72;&#x8349;&#x5305;&#xFF0C;&#x5982;&#x6709;&#xFF0C;<span class="math inline">\(sum++\)</span>
&#x5E76;&#x5165;&#x961F;&#xFF0C;&#x65E0;&#xFF0C;&#x76F4;&#x63A5;&#x5165;&#x961F;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x6807;&#x8BB0;&#x8BE5;&#x4F4D;&#x7F6E;&#x5DF2;&#x8D70;&#x8FC7;&#xFF08;&#x9632;&#x6B62;&#x91CD;&#x590D;&#x7ED5;&#x5708;&#xFF09;&#x3002;</li>
<li>&#x7EE7;&#x7EED;&#x5FAA;&#x73AF; <span class="math inline">\(3-6\)</span> &#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x76F4;&#x5230;&#x88AB;&#x7B2C;
<span class="math inline">\(5\)</span> &#x6B65;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#x3002;</li>
</ol>
<h4 id="&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90E8;&#x5206;&#x770B;&#x5B8C;&#x4F9D;&#x7136;&#x4E0D;&#x660E;&#x767D;&#x5177;&#x4F53;&#x601D;&#x8DEF;&#x6216;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#x90A3;&#x4E48;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x4E4B;&#x4E00;">&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90E8;&#x5206;&#x770B;&#x5B8C;&#x4F9D;&#x7136;&#x4E0D;&#x660E;&#x767D;&#x5177;&#x4F53;&#x601D;&#x8DEF;&#x6216;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#xFF0C;&#x90A3;&#x4E48;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x4E4B;&#x4E00;&#xFF1A;</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> {</span><br><span class="line">    <span class="type">int</span> x, y, sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">abab</span><span class="params">(<span class="type">int</span> sum,<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{ <span class="comment">//&#x5165;&#x961F;&#x5217;</span></span><br><span class="line">	a1.sum=sum,a1.x=x,a1.y=y;</span><br><span class="line">	q.<span class="built_in">push</span>(a1);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//t.x&#x548C;t.y&#x5206;&#x522B;&#x662F;&#x62D6;&#x62C9;&#x673A;&#x7684;&#x5750;&#x6807;</span></span><br><span class="line">Node t;</span><br><span class="line">t.sum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&#x8FDB;&#x961F;&#x5217;</span></span><br><span class="line">q.<span class="built_in">push</span>(t);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {<span class="comment">//&#x5224;&#x65AD;&#x961F;&#x5217;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;</span></span><br><span class="line">	a = q.<span class="built_in">top</span>();</span><br><span class="line">	<span class="comment">//&#x53D6;&#x51FA;&#x961F;&#x5934;&#x5143;&#x7D20;</span></span><br><span class="line">	q.<span class="built_in">pop</span>();</span><br><span class="line">	<span class="comment">//&#x961F;&#x5934;&#x5143;&#x7D20;&#x51FA;&#x961F;</span></span><br><span class="line">	<span class="keyword">if</span> (a.x == <span class="number">0</span> &amp;&amp; a.y == <span class="number">0</span>) {<span class="comment">//&#x5224;&#x65AD;&#x62D6;&#x62C9;&#x673A;&#x662F;&#x5426;&#x5230;&#x8FBE;&#x539F;&#x70B9;</span></span><br><span class="line">		cout &lt;&lt; a.sum &lt;&lt; endl;</span><br><span class="line">		<span class="comment">//&#x8F93;&#x51FA;&#x7B54;&#x6848;</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">if</span> (a.y + <span class="number">1</span> &lt;= <span class="number">1001</span>&amp;&amp; flag[a.x][a.y + <span class="number">1</span>] == <span class="number">0</span> ) {</span><br><span class="line">		<span class="comment">//&#x9632;&#x6B62;a.y&#x8D8A;&#x754C;   &#x5224;&#x65AD;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x8D70;&#x8FC7;</span></span><br><span class="line">		<span class="keyword">if</span> (can[a.x][a.y + <span class="number">1</span>]) {</span><br><span class="line">	        <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x5E72;&#x8349;&#x5305;</span></span><br><span class="line">			<span class="built_in">abab</span>(a.sum+<span class="number">1</span>,a.x,a.y+<span class="number">1</span>);<span class="comment">//&#x5165;&#x961F;</span></span><br><span class="line">		} <span class="keyword">else</span> {</span><br><span class="line">			<span class="built_in">abab</span>(a.sum,a.x,a.y+<span class="number">1</span>);</span><br><span class="line">		}</span><br><span class="line">		flag[a.x][a.y + <span class="number">1</span>] = <span class="number">1</span>;<span class="comment">//&#x6807;&#x8BB0;&#x4E3A;&#x5DF2;&#x8D70;&#x8FC7;</span></span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
<p><a href="https://www.luogu.com.cn/paste/0x4fk9s3">&#x5B8C;&#x6574;&#x4EE3;&#x7801;</a></p>
]]></content>
      <tags>
        <tag>优先队列</tag>
      </tags>
  </entry>
</search>
