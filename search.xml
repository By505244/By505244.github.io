<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/oi_blogs/2022/07/07/CF1697C%E9%A2%98%E8%A7%A3/html/"/>
      <url>/oi_blogs/2022/07/07/CF1697C%E9%A2%98%E8%A7%A3/html/</url>
      
        <content type="html"><![CDATA[<!doctype html><html><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width initial-scale=1"><link href="https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&amp;subset=latin,latin-ext" rel="stylesheet" type="text/css"><style type="text/css">html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:"Lucida Console",Consolas,"Courier",monospace; --title-bar-height:20px; }.mac-os-11 { --title-bar-height:28px; }html { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }body { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }iframe { margin: auto; }a.url { word-break: break-all; }a:active, a:hover { outline: 0px; }.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }#write.first-line-indent p { text-indent: 2em; }#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }#write.first-line-indent li { margin-left: 2em; }.for-image #write { padding-left: 8px; padding-right: 8px; }body.typora-export { padding-left: 30px; padding-right: 30px; }.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }.typora-export .task-list-item input { pointer-events: none; }@media screen and (max-width: 500px) {  body.typora-export { padding-left: 0px; padding-right: 0px; }  #write { padding-left: 20px; padding-right: 20px; }  .CodeMirror-sizer { margin-left: 0px !important; }  .CodeMirror-gutters { display: none !important; }}#write li > figure:last-child { margin-bottom: 0.5rem; }#write ol, #write ul { position: relative; }img { max-width: 100%; vertical-align: middle; image-orientation: from-image; }button, input, select, textarea { color: inherit; font: inherit; }input[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }*, ::after, ::before { box-sizing: border-box; }#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }p { line-height: inherit; }h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }p { orphans: 4; }h1 { font-size: 2rem; }h2 { font-size: 1.8rem; }h3 { font-size: 1.6rem; }h4 { font-size: 1.4rem; }h5 { font-size: 1.2rem; }h6 { font-size: 1rem; }.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }.hidden { display: none; }.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }a { cursor: pointer; }sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }figure > table { margin: 0px; }tr { break-inside: avoid; break-after: auto; }thead { display: table-header-group; }table { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }table.md-table td { min-width: 32px; }.CodeMirror-gutters { border-right: 0px; background-color: inherit; }.CodeMirror-linenumber { user-select: none; }.CodeMirror { text-align: left; }.CodeMirror-placeholder { opacity: 0.3; }.CodeMirror pre { padding: 0px 4px; }.CodeMirror-lines { padding: 0px; }div.hr:focus { cursor: none; }#write pre { white-space: pre-wrap; }#write.fences-no-line-wrapping pre { white-space: pre; }#write pre.ty-contain-cm { white-space: normal; }.CodeMirror-gutters { margin-right: 4px; }.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }#write .md-fences.mock-cm { white-space: pre-wrap; }.md-fences.md-fences-with-lineno { padding-left: 0px; }#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }.CodeMirror-line, twitterwidget { break-inside: avoid; }.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }.footnotes + .footnotes { margin-top: 0px; }.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }li div { padding-top: 0px; }blockquote { margin: 1rem 0px; }li .mathjax-block, li p { margin: 0.5rem 0px; }li blockquote { margin: 1rem 0px; }li { margin: 0px; position: relative; }blockquote > :last-child { margin-bottom: 0px; }blockquote > :first-child, li > :first-child { margin-top: 0px; }.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }#write .footnote-line { white-space: pre-wrap; }@media print {  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }  .typora-export * { -webkit-print-color-adjust: exact; }  .typora-export #write { break-after: avoid; }  .typora-export #write::after { height: 0px; }  .is-mac table { break-inside: avoid; }  .typora-export-show-outline .typora-export-sidebar { display: none; }}.footnote-line { margin-top: 0.714em; font-size: 0.7em; }a img, img a { cursor: pointer; }pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }p > .md-image:only-child { display: inline-block; width: 100%; }#write .MathJax_Display { margin: 0.8em 0px 0px; }.md-math-block { width: 100%; }.md-math-block:not(:empty)::after { display: none; }.MathJax_ref { fill: currentcolor; }[contenteditable="true"]:active, [contenteditable="true"]:focus, [contenteditable="false"]:active, [contenteditable="false"]:focus { outline: 0px; box-shadow: none; }.md-task-list-item { position: relative; list-style-type: none; }.task-list-item.md-task-list-item { padding-left: 0px; }.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }.math { font-size: 1rem; }.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }.md-toc-content { position: relative; margin-left: 0px; }.md-toc-content::after, .md-toc::after { display: none; }.md-toc-item { display: block; color: rgb(65, 131, 196); }.md-toc-item a { text-decoration: none; }.md-toc-inner:hover { text-decoration: underline; }.md-toc-inner { display: inline-block; cursor: pointer; }.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }.md-toc-h2 .md-toc-inner { margin-left: 2em; }.md-toc-h3 .md-toc-inner { margin-left: 4em; }.md-toc-h4 .md-toc-inner { margin-left: 6em; }.md-toc-h5 .md-toc-inner { margin-left: 8em; }.md-toc-h6 .md-toc-inner { margin-left: 10em; }@media screen and (max-width: 48em) {  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }  .md-toc-h4 .md-toc-inner { margin-left: 5em; }  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }  .md-toc-h6 .md-toc-inner { margin-left: 8em; }}a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }.footnote-line a:not(.reversefootnote) { color: inherit; }.md-attr { display: none; }.md-fn-count::after { content: "."; }code, pre, samp, tt { font-family: var(--monospace); }kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--monospace); }code { text-align: left; vertical-align: initial; }a.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }.md-diagram-panel > svg { max-width: 100%; }[lang="flow"] svg, [lang="mermaid"] svg { max-width: 100%; height: auto; }[lang="mermaid"] .node text { font-size: 1rem; }table tr th { border-bottom: 0px; }video { max-width: 100%; display: block; margin: 0px auto; }iframe { max-width: 100%; width: 100%; border: none; }.highlight td, .highlight tr { border: 0px; }mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }.md-expand mark .md-meta { opacity: 0.3 !important; }mark .md-meta { color: rgb(0, 0, 0); }@media print {  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }}.md-diagram-panel .messageText { stroke: none !important; }.md-diagram-panel .start-state { fill: var(--node-fill); }.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }.md-fences.md-fences-math { font-size: 1em; }.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }.md-fences-advanced:not(.md-focus) { background: inherit; }.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }.typora-export-show-outline #write { --webkit-flex:2; flex: 2 1 0%; }.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }@media screen and (max-width: 1024px) {  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }}@media screen and (max-width: 800px) {  .typora-export-sidebar { display: none; }}.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }.outline-content ul { margin-top: 0px; margin-bottom: 0px; }.outline-content strong { font-weight: 400; }.outline-expander { width: 1rem; height: 1.42857rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }.outline-expander::before { content: ""; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }.outline-expander:hover::before { content: ""; }.outline-h1 > .outline-item { padding-left: 0px; }.outline-h2 > .outline-item { padding-left: 1em; }.outline-h3 > .outline-item { padding-left: 2em; }.outline-h4 > .outline-item { padding-left: 3em; }.outline-h5 > .outline-item { padding-left: 4em; }.outline-h6 > .outline-item { padding-left: 5em; }.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }.outline-label:hover { text-decoration: underline; }.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left: 28px solid transparent; border-right: 28px solid transparent; }.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }.outline-item-open > .outline-item > .outline-expander::before { content: ""; }.outline-children { display: none; }.info-panel-tab-wrapper { display: none; }.outline-item-open > .outline-children { display: block; }.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px solid transparent; }.typora-export .outline-expander::before { content: "+"; font-family: inherit; top: -1px; }.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: "−"; }.typora-export-collapse-outline .outline-children { display: none; }.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }.typora-export-no-collapse-outline .outline-expander::before { content: "" !important; }.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }.md-inline-math-container mjx-container { zoom: 0.95; }.CodeMirror { height: auto; }.CodeMirror.cm-s-inner { background: inherit; }.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }.cm-s-inner .cm-number { color: rgb(17, 102, 68); }.cm-s-inner .cm-def { color: rgb(0, 0, 255); }.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }.cm-s-inner .cm-string { color: rgb(170, 17, 17); }.cm-s-inner .cm-property { color: rgb(0, 0, 0); }.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }.cm-negative { color: rgb(221, 68, 68); }.cm-positive { color: rgb(34, 153, 34); }.cm-header, .cm-strong { font-weight: 700; }.cm-del { text-decoration: line-through; }.cm-em { font-style: italic; }.cm-link { text-decoration: underline; }.cm-error { color: red; }.cm-invalidchar { color: red; }.cm-constant { color: rgb(38, 139, 210); }.cm-defined { color: rgb(181, 137, 0); }div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }.cm-s-inner .CodeMirror-activeline-background { background: inherit; }.CodeMirror { position: relative; overflow: hidden; }.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }.CodeMirror-sizer { position: relative; }.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }.CodeMirror-lines { cursor: text; }.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }.CodeMirror-measure pre { position: static; }.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }.CodeMirror div.CodeMirror-cursor { visibility: hidden; }.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }.cm-searching { background: rgba(255, 255, 0, 0.4); }span.cm-underlined { text-decoration: underline; }span.cm-strikethrough { text-decoration: line-through; }.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }.cm-tw-deleted { text-decoration: line-through; }.cm-tw-header5 { font-weight: 700; }.cm-tw-listitem:first-child { padding-left: 10px; }.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }.cm-tw-underline { text-decoration: underline; }@media print {  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }}:root {    --side-bar-bg-color: #fafafa;    --control-text-color: #777;}@include-when-export url(https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext);/* open-sans-regular - latin-ext_latin */  /* open-sans-italic - latin-ext_latin */    /* open-sans-700 - latin-ext_latin */    /* open-sans-700italic - latin-ext_latin */  html {    font-size: 16px;    -webkit-font-smoothing: antialiased;}body {    font-family: "Open Sans","Clear Sans", "Helvetica Neue", Helvetica, Arial, 'Segoe UI Emoji', sans-serif;    color: rgb(51, 51, 51);    line-height: 1.6;}#write {    max-width: 860px;  margin: 0 auto;  padding: 30px;    padding-bottom: 100px;}@media only screen and (min-width: 1400px) {#write {max-width: 1024px;}}@media only screen and (min-width: 1800px) {#write {max-width: 1200px;}}#write > ul:first-child,#write > ol:first-child{    margin-top: 30px;}a {    color: #4183C4;}h1,h2,h3,h4,h5,h6 {    position: relative;    margin-top: 1rem;    margin-bottom: 1rem;    font-weight: bold;    line-height: 1.4;    cursor: text;}h1:hover a.anchor,h2:hover a.anchor,h3:hover a.anchor,h4:hover a.anchor,h5:hover a.anchor,h6:hover a.anchor {    text-decoration: none;}h1 tt,h1 code {    font-size: inherit;}h2 tt,h2 code {    font-size: inherit;}h3 tt,h3 code {    font-size: inherit;}h4 tt,h4 code {    font-size: inherit;}h5 tt,h5 code {    font-size: inherit;}h6 tt,h6 code {    font-size: inherit;}h1 {    font-size: 2.25em;    line-height: 1.2;    border-bottom: 1px solid #eee;}h2 {    font-size: 1.75em;    line-height: 1.225;    border-bottom: 1px solid #eee;}/*@media print {    .typora-export h1,    .typora-export h2 {        border-bottom: none;        padding-bottom: initial;    }    .typora-export h1::after,    .typora-export h2::after {        content: "";        display: block;        height: 100px;        margin-top: -96px;        border-top: 1px solid #eee;    }}*/h3 {    font-size: 1.5em;    line-height: 1.43;}h4 {    font-size: 1.25em;}h5 {    font-size: 1em;}h6 {   font-size: 1em;    color: #777;}p,blockquote,ul,ol,dl,table{    margin: 0.8em 0;}li>ol,li>ul {    margin: 0 0;}hr {    height: 2px;    padding: 0;    margin: 16px 0;    background-color: #e7e7e7;    border: 0 none;    overflow: hidden;    box-sizing: content-box;}li p.first {    display: inline-block;}ul,ol {    padding-left: 30px;}ul:first-child,ol:first-child {    margin-top: 0;}ul:last-child,ol:last-child {    margin-bottom: 0;}blockquote {    border-left: 4px solid #dfe2e5;    padding: 0 15px;    color: #777777;}blockquote blockquote {    padding-right: 0;}table {    padding: 0;    word-break: initial;}table tr {    border: 1px solid #dfe2e5;    margin: 0;    padding: 0;}table tr:nth-child(2n),thead {    background-color: #f8f8f8;}table th {    font-weight: bold;    border: 1px solid #dfe2e5;    border-bottom: 0;    margin: 0;    padding: 6px 13px;}table td {    border: 1px solid #dfe2e5;    margin: 0;    padding: 6px 13px;}table th:first-child,table td:first-child {    margin-top: 0;}table th:last-child,table td:last-child {    margin-bottom: 0;}.CodeMirror-lines {    padding-left: 4px;}.code-tooltip {    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);    border-top: 1px solid #eef2f2;}.md-fences,code,tt {    border: 1px solid #e7eaed;    background-color: #f8f8f8;    border-radius: 3px;    padding: 0;    padding: 2px 4px 0px 4px;    font-size: 0.9em;}code {    background-color: #f3f4f4;    padding: 0 2px 0 2px;}.md-fences {    margin-bottom: 15px;    margin-top: 15px;    padding-top: 8px;    padding-bottom: 6px;}.md-task-list-item > input {  margin-left: -1.3em;}@media print {    html {        font-size: 13px;    }    table,    pre {        page-break-inside: avoid;    }    pre {        word-wrap: break-word;    }}.md-fences {background-color: #f8f8f8;}#write pre.md-meta-block {padding: 1rem;    font-size: 85%;    line-height: 1.45;    background-color: #f7f7f7;    border: 0;    border-radius: 3px;    color: #777777;    margin-top: 0 !important;}.mathjax-block>.code-tooltip {bottom: .375rem;}.md-mathjax-midline {    background: #fafafa;}#write>h3.md-focus:before{left: -1.5625rem;top: .375rem;}#write>h4.md-focus:before{left: -1.5625rem;top: .285714286rem;}#write>h5.md-focus:before{left: -1.5625rem;top: .285714286rem;}#write>h6.md-focus:before{left: -1.5625rem;top: .285714286rem;}.md-image>.md-meta {    /*border: 1px solid #ddd;*/    border-radius: 3px;    padding: 2px 0px 0px 4px;    font-size: 0.9em;    color: inherit;}.md-tag {    color: #a7a7a7;    opacity: 1;}.md-toc {     margin-top:20px;    padding-bottom:20px;}.sidebar-tabs {    border-bottom: none;}#typora-quick-open {    border: 1px solid #ddd;    background-color: #f8f8f8;}#typora-quick-open-item {    background-color: #FAFAFA;    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;    border-style: solid;    border-width: 1px;}/** focus mode */.on-focus-mode blockquote {    border-left-color: rgba(85, 85, 85, 0.12);}header, .context-menu, .megamenu-content, footer{    font-family: "Segoe UI", "Arial", sans-serif;}.file-node-content:hover .file-node-icon,.file-node-content:hover .file-node-open-state{    visibility: visible;}.mac-seamless-mode #typora-sidebar {    background-color: #fafafa;    background-color: var(--side-bar-bg-color);}.md-lang {    color: #b4654d;}/*.html-for-mac {    --item-hover-bg-color: #E6F0FE;}*/#md-notification .btn {    border: 0;}.dropdown-menu .divider {    border-color: #e5e5e5;    opacity: 0.4;}.ty-preferences .window-content {    background-color: #fafafa;}.ty-preferences .nav-group-item.active {    color: white;    background: #999;}.menu-item-container a.menu-style-btn {    background-color: #f5f8fa;    background-image: linear-gradient( 180deg , hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0)); }mjx-container[jax="SVG"] {  direction: ltr;}mjx-container[jax="SVG"] > svg {  overflow: visible;  min-height: 1px;  min-width: 1px;}mjx-container[jax="SVG"] > svg a {  fill: blue;  stroke: blue;}mjx-assistive-mml {  position: absolute !important;  top: 0px;  left: 0px;  clip: rect(1px, 1px, 1px, 1px);  padding: 1px 0px 0px 0px !important;  border: 0px !important;  display: block !important;  width: auto !important;  overflow: hidden !important;  -webkit-touch-callout: none;  -webkit-user-select: none;  -khtml-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}mjx-assistive-mml[display="block"] {  width: 100% !important;}mjx-container[jax="SVG"][display="true"] {  display: block;  text-align: center;  margin: 1em 0;}mjx-container[jax="SVG"][display="true"][width="full"] {  display: flex;}mjx-container[jax="SVG"][justify="left"] {  text-align: left;}mjx-container[jax="SVG"][justify="right"] {  text-align: right;}g[data-mml-node="merror"] > g {  fill: red;  stroke: red;}g[data-mml-node="merror"] > rect[data-background] {  fill: yellow;  stroke: none;}g[data-mml-node="mtable"] > line[data-line], svg[data-table] > g > line[data-line] {  stroke-width: 70px;  fill: none;}g[data-mml-node="mtable"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {  stroke-width: 70px;  fill: none;}g[data-mml-node="mtable"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {  stroke-dasharray: 140;}g[data-mml-node="mtable"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {  stroke-linecap: round;  stroke-dasharray: 0,140;}g[data-mml-node="mtable"] > g > svg {  overflow: visible;}[jax="SVG"] mjx-tool {  display: inline-block;  position: relative;  width: 0;  height: 0;}[jax="SVG"] mjx-tool > mjx-tip {  position: absolute;  top: 0;  left: 0;}mjx-tool > mjx-tip {  display: inline-block;  padding: .2em;  border: 1px solid #888;  font-size: 70%;  background-color: #F8F8F8;  color: black;  box-shadow: 2px 2px 5px #AAAAAA;}g[data-mml-node="maction"][data-toggle] {  cursor: pointer;}mjx-status {  display: block;  position: fixed;  left: 1em;  bottom: 1em;  min-width: 25%;  padding: .2em .4em;  border: 1px solid #888;  font-size: 90%;  background-color: #F8F8F8;  color: black;}foreignObject[data-mjx-xml] {  font-family: initial;  line-height: normal;  overflow: visible;}mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {  stroke-width: 3;}g[data-mml-node="xypic"] path {  stroke-width: inherit;}.MathJax g[data-mml-node="xypic"] path {  stroke-width: inherit;}mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {stroke-width: 0;}</style><title>CF1697C&#x9898;&#x89E3;</title></head><body class="typora-export os-windows"><div class="typora-export-content"><div id="write" class><p><a href="https://codeforces.com/contest/1697/problem/C"><span>&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</span></a><span> &amp; </span><a href="https://by505244.github.io/oi_blogs/2022/06/18/CF1697C&#x9898;&#x89E3;/html.html"><span>&#x66F4;</span><del><span>&#x5DEE;</span></del><span>&#x7684;&#x9605;&#x8BFB;&#x4F53;&#x9A8C;</span></a></p><p><span>&#x7ED3;&#x5408;&#x9898;&#x76EE;&#x53D1;&#x73B0;&#xFF0C; </span><code>a</code><span> &#x53EA;&#x80FD;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#xFF0C;</span><code>c</code><span> &#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</span></p><p><span>&#x8FDB;&#x4E00;&#x6B65;&#x89C2;&#x5BDF;&#x53D1;&#x73B0;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x8C03;&#x6362;&#xFF0C;&#x53EA;&#x8C03;&#x6362; </span><code>a,b</code><span> &#x6216; </span><code>b,c</code><span> &#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x4E0D;&#x8C03;&#x6362; </span><code>a,c</code><span> &#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#x3002;</span></p><p><span>&#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5982;&#x679C; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewbox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-443-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-443-TEX-I-1D460"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> &#x80FD;&#x8C03;&#x6362;&#x6210; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewbox="0 -626 361 637" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-444-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-444-TEX-I-1D461"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>t</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">t</script><span>&#xFF1A;</span></p><ul><li><span>&#x628A; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewbox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-443-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-443-TEX-I-1D460"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> &#x548C; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewbox="0 -626 361 637" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-444-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-444-TEX-I-1D461"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>t</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">t</script><span> &#x4E2D;&#x5168;&#x90E8;&#x7684; </span><code>b</code><span> &#x90FD;&#x5220;&#x6389; &#x5219; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.895ex" height="1.602ex" role="img" focusable="false" viewbox="0 -626 2163.6 708" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.186ex;"><defs><path id="MJX-237-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/><path id="MJX-237-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/><path id="MJX-237-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-237-TEX-I-1D460"/></g><g data-mml-node="mo" transform="translate(746.8,0)"><use data-c="3D" xlink:href="#MJX-237-TEX-N-3D"/></g><g data-mml-node="mi" transform="translate(1802.6,0)"><use data-c="1D461" xlink:href="#MJX-237-TEX-I-1D461"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi><mo>=</mo><mi>t</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s=t</script><span>&#x3002;</span></li></ul><p><span>&#x7531;&#x4E8E; </span><code>a</code><span> &#x53EA;&#x80FD;&#x5411;&#x540E;&#x79FB;&#x52A8;&#xFF0C;</span><code>c</code><span> &#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</span></p><ul><li><span>&#x5728; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewbox="0 -626 361 637" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-444-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-444-TEX-I-1D461"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>t</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">t</script><span> &#x4E2D;&#xFF0C;&#x76F8;&#x540C;&#x7684; </span><code>a</code><span> &#x4E00;&#x5B9A;&#x5728; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewbox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-443-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-443-TEX-I-1D460"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> &#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x540E;&#x9762;&#xFF0C;&#x76F8;&#x540C;&#x7684; </span><code>c</code><span> &#x4E00;&#x5B9A;&#x5728; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewbox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-443-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-443-TEX-I-1D460"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> &#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x524D;&#x9762;&#x3002;</span></li></ul><p><span>&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x5219;&#x4E0D;&#x80FD;&#x8C03;&#x6362;&#x6210; </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewbox="0 -626 361 637" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-444-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-444-TEX-I-1D461"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>t</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">t</script><span>&#x3002;</span></p><p><del><span>&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x5199;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x3002;</span></del></p><pre class="md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded" spellcheck="false" lang="cpp" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="cpp"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9.2px; left: 45px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 37px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>28</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -37px; width: 37px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 28px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-meta">#define INF 0x7fffffff</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-meta">#define DEBUG puts(&quot;shsyyds&quot;);</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text cm-zwsp></span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">void</span> <span class="cm-def">solve</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable-3">int</span> <span class="cm-variable">n</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable">scanf</span>(<span class="cm-string">&quot;%d&quot;</span>,<span class="cm-operator">&amp;</span><span class="cm-variable">n</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable">std::string</span> <span class="cm-variable">s</span>,<span class="cm-variable">t</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable">std::cin</span><span class="cm-operator">&gt;&gt;</span><span class="cm-variable">s</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable">std::cin</span><span class="cm-operator">&gt;&gt;</span><span class="cm-variable">t</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 28px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable-3">int</span> <span class="cm-variable">j</span><span class="cm-operator">=</span><span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable-3">int</span> <span class="cm-variable">sb</span><span class="cm-operator">=</span><span class="cm-number">0</span>,<span class="cm-variable">sb2</span><span class="cm-operator">=</span><span class="cm-number">0</span>;<span class="cm-comment">//sum of &apos;b&apos;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-keyword">for</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span><span class="cm-operator">=</span><span class="cm-number">0</span>;<span class="cm-variable">i</span><span class="cm-operator">&lt;</span><span class="cm-variable">n</span>;<span class="cm-variable">i</span><span class="cm-operator">++</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-keyword">while</span>(<span class="cm-variable">t</span>[<span class="cm-variable">j</span>]<span class="cm-operator">==</span><span class="cm-string">&apos;b&apos;</span>)<span class="cm-variable">sb2</span><span class="cm-operator">++</span>,<span class="cm-variable">j</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-keyword">if</span>(<span class="cm-variable">s</span>[<span class="cm-variable">i</span>]<span class="cm-operator">==</span><span class="cm-string">&apos;b&apos;</span>){<span class="cm-variable">sb</span><span class="cm-operator">++</span>;<span class="cm-keyword">continue</span>;}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-keyword">if</span>(<span class="cm-variable">s</span>[<span class="cm-variable">i</span>]<span class="cm-operator">!=</span><span class="cm-variable">t</span>[<span class="cm-variable">j</span>]<span class="cm-operator">||</span><span class="cm-variable">s</span>[<span class="cm-variable">i</span>]<span class="cm-operator">==</span><span class="cm-string">&apos;a&apos;</span><span class="cm-operator">&amp;&amp;</span><span class="cm-variable">i</span><span class="cm-operator">&gt;</span><span class="cm-variable">j</span><span class="cm-operator">||</span><span class="cm-variable">s</span>[<span class="cm-variable">i</span>]<span class="cm-operator">==</span><span class="cm-string">&apos;c&apos;</span><span class="cm-operator">&amp;&amp;</span><span class="cm-variable">i</span><span class="cm-operator">&lt;</span><span class="cm-variable">j</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-variable">puts</span>(<span class="cm-string">&quot;NO&quot;</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-keyword">return</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-variable">j</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 28px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-keyword">while</span>(<span class="cm-variable">t</span>[<span class="cm-variable">j</span>]<span class="cm-operator">==</span><span class="cm-string">&apos;b&apos;</span>)<span class="cm-variable">sb2</span><span class="cm-operator">++</span>,<span class="cm-variable">j</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-keyword">if</span>(<span class="cm-variable">sb</span><span class="cm-operator">!=</span><span class="cm-variable">sb2</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-variable">puts</span>(<span class="cm-string">&quot;NO&quot;</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0; &#xA0; &#xA0;<span class="cm-keyword">return</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0;  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-variable">puts</span>(<span class="cm-string">&quot;YES&quot;</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 28px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &#xA0; &#xA0;<span class="cm-keyword">return</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -37px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt CodeMirror-linenumber-show" style="left: 0px; width: 28px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 627px;"></div><div class="CodeMirror-gutters" style="height: 627px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 36px;"></div></div></div></div></pre></div></div></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CF1697C题解</title>
      <link href="/oi_blogs/2022/06/18/CF1697C%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/18/CF1697C%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1697/problem/C">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a>&amp; <a href="https://by505244.github.io/oi_blogs/2022/06/18/CF1697C&#x9898;&#x89E3;/html.html">&#x66F4;<del>&#x5DEE;</del>&#x7684;&#x9605;&#x8BFB;&#x4F53;&#x9A8C;</a></p><p>&#x7ED3;&#x5408;&#x9898;&#x76EE;&#x53D1;&#x73B0;&#xFF0C; <code>a</code> &#x53EA;&#x80FD;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#xFF0C;<code>c</code>&#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</p><p>&#x8FDB;&#x4E00;&#x6B65;&#x89C2;&#x5BDF;&#x53D1;&#x73B0;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x8C03;&#x6362;&#xFF0C;&#x53EA;&#x8C03;&#x6362; <code>a,b</code> &#x6216;<code>b,c</code> &#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x4E0D;&#x8C03;&#x6362; <code>a,c</code> &#x7684;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5982;&#x679C; <span class="math inline">\(s\)</span> &#x80FD;&#x8C03;&#x6362;&#x6210; <span class="math inline">\(t\)</span>&#xFF1A;</p><ul><li>&#x628A; <span class="math inline">\(s\)</span> &#x548C; <span class="math inline">\(t\)</span> &#x4E2D;&#x5168;&#x90E8;&#x7684; <code>b</code> &#x90FD;&#x5220;&#x6389; &#x5219; <span class="math inline">\(s=t\)</span>&#x3002;</li></ul><p>&#x7531;&#x4E8E; <code>a</code> &#x53EA;&#x80FD;&#x5411;&#x540E;&#x79FB;&#x52A8;&#xFF0C;<code>c</code> &#x53EA;&#x80FD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x3002;</p><ul><li>&#x5728; <span class="math inline">\(t\)</span> &#x4E2D;&#xFF0C;&#x76F8;&#x540C;&#x7684; <code>a</code>&#x4E00;&#x5B9A;&#x5728; <span class="math inline">\(s\)</span> &#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x540E;&#x9762;&#xFF0C;&#x76F8;&#x540C;&#x7684;<code>c</code> &#x4E00;&#x5B9A;&#x5728; <span class="math inline">\(s\)</span>&#x4E2D;&#x539F;&#x6765;&#x7684;&#x5730;&#x65B9;&#x6216;&#x524D;&#x9762;&#x3002;</li></ul><p>&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x5219;&#x4E0D;&#x80FD;&#x8C03;&#x6362;&#x6210; <span class="math inline">\(t\)</span>&#x3002;</p><p><del>&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x5199;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x3002;</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;shsyyds&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    std::string s,t;</span><br><span class="line">    std::cin&gt;&gt;s;</span><br><span class="line">    std::cin&gt;&gt;t;</span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sb=<span class="number">0</span>,sb2=<span class="number">0</span>;<span class="comment">//sum of &apos;b&apos;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++){</span><br><span class="line">        <span class="keyword">while</span>(t[j]==<span class="string">&apos;b&apos;</span>)sb2++,j++;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&apos;b&apos;</span>){sb++;<span class="keyword">continue</span>;}</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=t[j]||s[i]==<span class="string">&apos;a&apos;</span>&amp;&amp;i&gt;j||s[i]==<span class="string">&apos;c&apos;</span>&amp;&amp;i&lt;j){</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        j++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span>(t[j]==<span class="string">&apos;b&apos;</span>)sb2++,j++;</span><br><span class="line">    <span class="keyword">if</span>(sb!=sb2){</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1690D题解</title>
      <link href="/oi_blogs/2022/06/12/CF1690D%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/12/CF1690D%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1690/D">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><h3 id="&#x9898;&#x610F;">&#x9898;&#x610F;</h3><p>&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(k\)</span>&#x533A;&#x95F4;&#xFF0C;&#x4F7F;&#x5F97;&#x533A;&#x95F4;&#x4E2D;&#x767D;&#x8272;&#x65B9;&#x5757;&#x5C3D;&#x53EF;&#x80FD;&#x5C11;&#xFF0C;&#x8F93;&#x51FA;&#x6700;&#x5C11;&#x533A;&#x95F4;&#x7684;&#x767D;&#x8272;&#x65B9;&#x5757;&#x6570;&#x91CF;&#x3002;</p><h3 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;</h3><p>&#x5C06; <code>W</code> &#x6539;&#x4E3A; <span class="math inline">\(1\)</span>&#xFF0C;&#x5C06;<code>B</code> &#x6539;&#x4E3A; <span class="math inline">\(0\)</span>&#xFF0C;&#x5B58;&#x50A8;&#x5728; <span class="math inline">\(a\)</span> &#x6570;&#x7EC4;&#x5F53;&#x4E2D;&#x3002;</p><p>&#x66B4;&#x529B;&#x679A;&#x4E3E;&#x627E;&#x5230;</p><p><span class="math display">\[\min_{1\le i\len-k}\sum_{j=i}^{i+k}a_i\]</span></p><p>&#x5373;&#x53EF;&#x3002;</p><p>&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A; <span class="math inline">\(O((n-k)\timesk)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;shsyyds&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="type">int</span> sum[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&apos;W&apos;</span>)sum[i]=sum[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> sum[i]=sum[i<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> ans=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n-k;i++){</span><br><span class="line">        ans=<span class="built_in">min</span>(ans,sum[i+k]-sum[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1690B题解</title>
      <link href="/oi_blogs/2022/06/10/CF1690B%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/10/CF1690B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CF1687A题解</title>
      <link href="/oi_blogs/2022/06/07/CF1687A%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/07/CF1687A%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1687/A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a>&amp; <a href="https://by505244.github.io/oi_blogs/2022/06/07/CF1687A&#x9898;&#x89E3;">&#x524D;&#x5F80;blog &#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x9605;&#x8BFB;&#x4F53;&#x9A8C;</a></p><p>&#x5C06;&#x6B64;&#x95EE;&#x9898;&#x62C6;&#x5206;&#x6210; <span class="math inline">\(2\)</span>&#x5C0F;&#x9898;&#x6765;&#x89E3;&#x7B54;&#x3002;</p><ol type="1"><li>&#x6C42; <span class="math inline">\(a\)</span> &#x6570;&#x7EC4;&#x4E2D;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(k\)</span> &#x7684;&#x548C;&#x7684;&#x6700;&#x5927;&#x503C;&#x3002;&#xFF08;<span class="math inline">\(k\ge n\)</span> &#x65F6; &#x4E0D;&#x9700;&#x8003;&#x8651;&#x6B64;&#x95EE;&#x9898;&#xFF09;</li><li>&#x6C42;&#x5728; <span class="math inline">\(k\)</span>&#x7684;&#x65F6;&#x95F4;&#x91CC;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x5F97;<strong>&#x6240;&#x6709;&#x4F4D;&#x7F6E;&#x88AB;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x904D;&#x5386;&#x5230;&#x7684;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;</strong>&#x3002;</li></ol><h6 id="&#x5BF9;&#x4E8E;-n-k-&#x7684;&#x60C5;&#x51B5;">&#x5BF9;&#x4E8E; <span class="math inline">\(n&lt;k\)</span> &#x7684;&#x60C5;&#x51B5;</h6><p>&#x5148;&#x8003;&#x8651;&#x7B2C;&#x4E8C;&#x4E2A;&#x5C0F;&#x95EE;&#x3002;</p><p>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x88AB;&#x91CD;&#x590D;&#x904D;&#x5386;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5C31;&#x4F1A;&#x6D6A;&#x8D39;&#x6389;&#x4E0A;&#x6B21;&#x904D;&#x5386;&#x5B8C;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x4F7F;&#x5F97;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;&#xFF0C;&#x6545;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x91CD;&#x590D;&#x904D;&#x5386;&#x4E0D;&#x53EF;&#x53D6;&#x3002;</p><p>&#x6545;&#x7B54;&#x6848;&#x4FBF;&#x662F;&#xFF1A;</p><p><span class="math display">\[\max\limits_{1\le i\len-k}(\sum\limits^{i+k}_{j=i}a_j)+\sum\limits_{i=0}^{k-1}i\]</span></p><h6 id="&#x5BF9;&#x4E8E;-nge-k-&#x7684;&#x60C5;&#x51B5;">&#x5BF9;&#x4E8E; <span class="math inline">\(n\gek\)</span> &#x7684;&#x60C5;&#x51B5;&#xFF1A;</h6><p>&#x7531;&#x4E8E; <span class="math inline">\(n\gek\)</span>&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x8003;&#x8651;&#x7B2C;&#x4E00;&#x5C0F;&#x95EE;&#xFF0C;&#x8F6C;&#x800C;&#x8003;&#x8651;&#x7B2C;&#x4E8C;&#x5C0F;&#x95EE;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x6EE1;&#x8DB3;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x6700;&#x5927;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6700;&#x540E; <span class="math inline">\(n\)</span>&#x79D2;&#x5185;&#x5C06;&#x6240;&#x6709;&#x6570;&#x90FD;&#x904D;&#x5386;&#x4E00;&#x904D;&#x3002;&#x6240;&#x4EE5;&#x4ECE;<strong>&#x5DE6;&#x5230;&#x53F3;&#x6216;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x4E00;&#x5B9A;&#x6240;&#x904D;&#x5386;&#x5230;&#x7684;&#x65F6;&#x95F4;&#x4E4B;&#x548C;&#x4E00;&#x5B9A;&#x6700;&#x5927;</strong>&#x3002;</p><p>&#x7531;&#x4E8E;&#x53EF;&#x4EE5;&#x539F;&#x5730;&#x8D70;&#xFF0C;&#x4E0D;&#x96BE;&#x8BC1;&#x660E;&#x5728; <span class="math inline">\(n\gek\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x7684;&#x3002;</p><p>&#x6545;&#x7B54;&#x6848;&#x4FBF;&#x662F;&#xFF1A;</p><p><span class="math display">\[(\sum\limits_{i=1}^{n}a_i)+\sum\limits_{i=k-n}^{k-1}i\]</span></p><p>&#x524D;&#x4E00;&#x6BB5;&#x7528;&#x524D;&#x7F00;&#x548C;&#x5904;&#x7406;&#xFF0C;&#x540E;&#x4E00;&#x6BB5;&#x53EF;&#x7528;&#x9AD8;&#x65AF;&#x6C42;&#x548C;&#x516C;&#x5F0F;&#x5904;&#x7406;&#x3002;</p><p>&#x6CE8;&#x610F;&#x5230;&#x9898;&#x76EE;&#x6570;&#x636E;&#x8303;&#x56F4;&#x8F83;&#x5927;&#xFF0C;&#x9700;&#x8981;&#x5F00; <code>long long</code> &#x5904;&#x7406;&#x3002;</p><p><del>&#x6700;&#x540E;&#x611F;&#x8C22; cocoly &#x8BA9;&#x6211;&#x91CD;&#x5199;&#x9898;&#x89E3;&#xFF0C;sto cocoly orz</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">ll a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">    }</span><br><span class="line">    ll cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(k&lt;=n){</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=k;i&lt;=n;i++){</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,a[i]-a[i-k]);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans+(k*(k<span class="number">-1</span>)/<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[n]+k<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,((k<span class="number">-1</span>)+(k-n))*(n)/<span class="number">2</span>+ a[n]);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 分类讨论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1688B题解</title>
      <link href="/oi_blogs/2022/06/05/CF1688B%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/05/CF1688B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1688/B">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><p>&#x5982;&#x679C;&#x7ED9;&#x51FA;&#x7684;&#x6570;&#x7EC4;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x5176;&#x4E0E;&#x5176;&#x4ED6;&#x7684;&#x5076;&#x6570;&#x76F8;&#x52A0;&#x5F97;&#x5230;&#x5947;&#x6570;&#x3002;&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#x76F8;&#x52A0;&#x4E00;&#x5B9A;&#x662F;&#x6BD4;&#x5BF9;&#x5076;&#x6570;&#x9664;&#x4E8C;&#x66F4;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p><p>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x6570;&#x7EC4;&#x4E2D; <span class="math inline">\(\text{lowbit}\)</span>&#x6700;&#x5C0F;&#x7684;&#x6570;&#x5316;&#x4E3A;&#x5947;&#x6570;&#xFF0C;&#x518D;&#x6267;&#x884C;&#x4E0A;&#x9762;&#x64CD;&#x4F5C;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="type">int</span> a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">31</span>;i++){</span><br><span class="line">        <span class="type">int</span> a=x&gt;&gt;i;</span><br><span class="line">        <span class="keyword">if</span>(a&amp;<span class="number">1</span>){</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> even=INF,odd=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i]&amp;<span class="number">1</span>)odd++;</span><br><span class="line">        <span class="keyword">else</span> even=<span class="built_in">min</span>(even,<span class="built_in">find</span>(a[i]));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(odd&gt;=<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n-odd);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,even+n<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1688A题解</title>
      <link href="/oi_blogs/2022/06/04/CF1688A%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/06/04/CF1688A%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1688/problem/A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><h3 id="&#x9898;&#x610F;">&#x9898;&#x610F;&#xFF1A;</h3><p>&#x7ED9;&#x5B9A; <span class="math inline">\(x\)</span>&#xFF0C;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;</p><p><span class="math display">\[x\ \texttt{and}\ y&gt;0\]</span> <span class="math display">\[x\ \texttt{xor}\ y&gt;0\]</span></p><p>&#x7684;&#x6700;&#x5C0F;&#x6B63;&#x6574;&#x6570; <span class="math inline">\(y\)</span>&#x3002;</p><hr><h3 id="&#x601D;&#x8DEF;">&#x601D;&#x8DEF;&#xFF1A;</h3><ul><li><p><span class="math inline">\(x\ \texttt{and}\ y&gt;0\)</span>&#x663E;&#x7136;&#x662F; <span class="math inline">\((x)_2\)</span> &#x548C; <span class="math inline">\((y)_2\)</span> &#x5728;&#x4E8C;&#x8FDB;&#x5236;&#x4E0B;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4F4D;&#x76F8;&#x540C;&#x3002;</p></li><li><p><span class="math inline">\(x\ \texttt{xor}\ y&gt;0\)</span>&#x663E;&#x7136;&#x662F; <span class="math inline">\((x)_2\)</span> &#x548C; <span class="math inline">\((y)_2\)</span> &#x5728;&#x4E8C;&#x8FDB;&#x5236;&#x4E0B;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4F4D;&#x4E0D;&#x540C;&#x3002;</p></li></ul><p>&#x8003;&#x8651;&#x5230; <span class="math inline">\(y\)</span>&#x7684;&#x503C;&#x8981;&#x6700;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x96BE;&#x53D1;&#x73B0; <span class="math inline">\((y)_2\)</span> &#x4E0E;<span class="math inline">\((x)_2\)</span> &#x5728;&#x76F8;&#x540C;&#x7684;&#x7684;&#x4F4D;&#x6570;&#x4EC5;&#x6709; <span class="math inline">\(1\)</span> &#x4F4D;&#x4E14;&#x4E3A; <span class="math inline">\((x)_2\)</span> &#x6700;&#x4F4E;&#x4F4D;&#x3002;</p><p>&#x5728;&#x524D;&#x9762;&#x5206;&#x6790;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x518D;&#x6765;&#x770B;&#x7B2C;&#x4E8C;&#x4E2A;&#x6761;&#x4EF6;&#x3002;<span class="math inline">\((x)_2\)</span> &#x4E2D;&#x6700;&#x4F4E;&#x4F4D;&#x7684; <span class="math inline">\(1\)</span> &#x4E0E; <span class="math inline">\((y)_2\)</span> &#x4E2D;&#x6700;&#x4F4E;&#x4F4D;&#x7684; <span class="math inline">\(1\)</span> &#x76F8;&#x540C;&#x5E76;&#x62B5;&#x6D88;&#xFF0C;&#x4F46;&#x5982;&#x679C; <span class="math inline">\((x)_2\)</span> &#x4E2D;&#x6709;&#x4E0D;&#x6B62;&#x4E00;&#x4E2A; <span class="math inline">\(1\)</span>&#xFF0C;&#x90A3;&#x4E48;&#x4E0E; <span class="math inline">\((y)_2\)</span> &#x5C31;&#x81F3;&#x5C11;&#x6709; <span class="math inline">\(1\)</span>&#x4F4D;&#x4E0D;&#x540C;&#xFF0C;&#x6EE1;&#x8DB3;&#x7B2C;&#x4E8C;&#x4E2A;&#x6761;&#x4EF6;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;&#x5C31;&#x5C06;&#x5176;&#x52A0;&#x4E0A; <span class="math inline">\(1\)</span>&#xFF0C;&#x4F7F;&#x5176;&#x81F3;&#x5C11;&#x6709; <span class="math inline">\(1\)</span> &#x4F4D;&#x4E0D;&#x540C;&#x3002;&#xFF08;<strong>&#x7279;&#x522B;&#x7684;&#xFF0C;&#x5F53; <span class="math inline">\(x=1\)</span> &#x65F6;&#xFF0C;<span class="math inline">\(y=3\)</span></strong>&#xFF09;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> maxn=<span class="number">0</span>,minn=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">31</span>;i++){</span><br><span class="line">        <span class="type">int</span> a=n&gt;&gt;i;</span><br><span class="line">        <span class="keyword">if</span>(a&amp;<span class="number">1</span>){</span><br><span class="line">            maxn=i;</span><br><span class="line">            <span class="keyword">if</span>(minn==<span class="number">-1</span>)minn=i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(maxn!=minn)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="number">1</span>&lt;&lt;minn);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="number">1</span>&lt;&lt;minn)+<span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1679B题解</title>
      <link href="/oi_blogs/2022/05/16/CF1679B%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/05/16/CF1679B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="&#x9898;&#x610F;&#x7B80;&#x8FF0;">&#x9898;&#x610F;&#x7B80;&#x8FF0;</h3><p>&#x6709;&#x4E00;&#x4E32;&#x957F;&#x5EA6;&#x4E3A; <span class="math inline">\(n\)</span>&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x4E00;&#x5171;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#xFF1A;</p><ul><li>&#x628A;&#x4F4D;&#x4E8E;&#x7B2C; <span class="math inline">\(i\)</span> &#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x7684;&#x503C;&#x6539;&#x4E3A;<span class="math inline">\(x\)</span>&#x3002;</li><li>&#x628A;&#x6240;&#x6709;&#x7684;&#x6570;&#x90FD;&#x6539;&#x4E3A; <span class="math inline">\(x\)</span>&#x3002;</li></ul><p>&#x5BF9;&#x4E8E;&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#x7ED3;&#x675F;&#x540E;&#x8F93;&#x51FA;&#x5F53;&#x524D;&#x6570;&#x7EC4;&#x7684;&#x548C;&#x3002;</p><h3 id="&#x89E3;&#x9898;&#x601D;&#x8DEF;">&#x89E3;&#x9898;&#x601D;&#x8DEF;</h3><p>&#x5148;&#x628A;&#x9898;&#x76EE;&#x6240;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x7684;&#x503C;&#x8BBE;&#x4E3A; <span class="math inline">\(sum\)</span>&#x3002;&#x8F93;&#x5165;&#x540E;&#x6C42;&#x51FA;&#x6570;&#x7EC4;&#x7684;&#x603B;&#x548C;&#x653E;&#x5165; <span class="math inline">\(sum\)</span> &#x4E2D;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C; <span class="math inline">\(2\)</span>&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x66B4;&#x529B;&#x66F4;&#x6362;&#x6240;&#x6709;&#x6570;&#x7EC4;&#x7684;&#x6570;&#x660E;&#x663E;&#x662F;&#x4E0D;&#x53EF;&#x884C;&#x7684;&#x3002;</p><p>&#x90A3;&#x4E48;&#x5C06;&#x6BCF;&#x4E2A;&#x6570;&#x9644;&#x52A0;&#x4E00;&#x4E2A;&#x503C; <span class="math inline">\(time\)</span>&#xFF0C;&#x64CD;&#x4F5C;&#x8981;&#x6C42;&#x8D4B;&#x7684;&#x503C;&#x4E3A; <span class="math inline">\(all\)</span>&#x3002;&#x4EE5;&#x53CA;&#x603B;&#x4F53;&#x65F6;&#x95F4; <span class="math inline">\(clock\)</span> &#x3002;&#x6BCF;&#x6267;&#x884C;&#x4E00;&#x6B21; <span class="math inline">\(2\)</span> &#x64CD;&#x4F5C;&#x5C06; <span class="math inline">\(clock++\)</span>&#xFF0C;&#x6B64;&#x65F6; <span class="math inline">\(sum=n\times all\)</span>&#x3002;</p><p>&#x5F53;&#x4E00;&#x4E2A;&#x6570;&#x9644;&#x52A0;&#x7684;&#x503C; <span class="math inline">\(time\ne clock\)</span>&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x201C;&#x8FC7;&#x65F6;&#x7684;&#x201D;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C; <span class="math inline">\(1\)</span> &#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x8BBE;&#x8F93;&#x5165;&#x8FDB;&#x7684;&#x6570;&#x4E3A;<span class="math inline">\(x\)</span>&#xFF0C;&#x68C0;&#x67E5;&#x5F53;&#x524D;&#x7684;&#x6570;&#x662F;&#x5426;&#x4E3A;&#x201C;&#x8FC7;&#x65F6;&#x7684;&#x201D;&#xFF0C;&#x5982;&#x679C;&#x8FC7;&#x65F6;&#xFF0C;&#x90A3;&#x4E48;&#x5F53;&#x524D;&#x8FD9;&#x4E2A;&#x6570;&#x7684;&#x503C;&#x539F;&#x6765;&#x5E94;&#x4E3A;<span class="math inline">\(all\)</span>&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(sum=all-x\)</span>&#xFF0C;&#x5E76;&#x5C06;&#x503C; <span class="math inline">\(time=clock\)</span>&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int unsigned long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{</span><br><span class="line">    <span class="type">int</span> val,time;</span><br><span class="line">} a[<span class="number">2000005</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> n,q,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%llu%llu&quot;</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;a[i].val);</span><br><span class="line">        sum+=a[i].val;</span><br><span class="line">        a[i].time=<span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> all=<span class="number">0</span>,num=<span class="number">0</span>;<span class="comment">//num &#x5373;&#x4E3A;&#x9898;&#x89E3;&#x4E2D;&#x7684; clock</span></span><br><span class="line">    <span class="keyword">while</span>(q--){</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>){</span><br><span class="line">            <span class="type">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%llu%llu&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            <span class="keyword">if</span>(a[x].time==num){</span><br><span class="line">                sum+=y-a[x].val,a[x].val=y;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                sum+=y-all,a[x].val=y,a[x].time=num;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%llu\n&quot;</span>,sum);</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">2</span>){</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%llu&quot;</span>,&amp;x);</span><br><span class="line">            sum=n*x,num++,all=x;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%llu\n&quot;</span>,sum);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 不知道是啥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CF1679A题解</title>
      <link href="/oi_blogs/2022/05/15/CF1679A%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/05/15/CF1679A%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://by505244.github.io/oi_blogs/2022/05/15/CF1679A%E9%A2%98%E8%A7%A3/">&#x524D;&#x5F80;blog &#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x9605;&#x8BFB;&#x4F53;&#x9A8C;</a></p><h3 id="&#x9898;&#x610F;&#x7B80;&#x8FF0;">&#x9898;&#x610F;&#x7B80;&#x8FF0;</h3><p>&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570; <span class="math inline">\(n\)</span> &#xFF0C;&#x6C42; <span class="math inline">\(4a+6b=n\)</span> &#x65F6; <span class="math inline">\(a+b\)</span> &#x7684;&#x6700;&#x5C0F;&#x503C;&#x548C;&#x6700;&#x5927;&#x503C;&#xFF08;<span class="math inline">\(a,b\)</span> &#x5747;&#x4E3A;&#x6574;&#x6570;&#xFF09;&#xFF0C;&#x65E0;&#x89E3;&#x65F6;&#x8F93;&#x51FA;<code>-1</code>&#xFF0C;&#x5171;&#x6709; <span class="math inline">\(t\)</span>&#x7EC4;&#x6570;&#x636E;&#x3002;</p><hr><h3 id="&#x89E3;&#x9898;&#x601D;&#x8DEF;">&#x89E3;&#x9898;&#x601D;&#x8DEF;</h3><p><span class="math inline">\(4a+6b=n\)</span> &#x53EF;&#x5316;&#x7B80;&#x4E3A; <span class="math inline">\(2a+3b=\dfrac{n}{2}\)</span>&#xFF0C;&#x6240;&#x4EE5; <span class="math inline">\(n\)</span> &#x4E00;&#x5B9A;&#x662F; <span class="math inline">\(2\)</span> &#x7684;&#x500D;&#x6570;&#x4E14; <span class="math inline">\(n\ge4\)</span>&#x3002;</p><p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0; <span class="math inline">\(a+b\)</span> &#x6700;&#x5C0F;&#x65F6; <span class="math inline">\(a\)</span> &#x4E00;&#x5B9A;&#x6700;&#x5927;&#xFF0C;<span class="math inline">\(b\)</span> &#x4E00;&#x5B9A;&#x6700;&#x5C0F;&#xFF0C;&#x5F53; <span class="math inline">\(a+b\)</span> &#x6700;&#x5927;&#x65F6;&#x53CD;&#x4E4B;&#x3002;</p><p>&#x8003;&#x8651; <span class="math inline">\(n\)</span> &#x6709;&#x5982;&#x4E0B;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p><table><colgroup><col style="width: 50%"><col style="width: 50%"></colgroup><thead><tr class="header"><th style="text-align: center;"><span class="math inline">\(n\)</span>&#x7684;&#x60C5;&#x51B5;</th><th style="text-align: center;">&#x5E94;&#x5BF9;&#x65B9;&#x6CD5;</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><span class="math inline">\(n\)</span>&#x4E3A; <span class="math inline">\(4\)</span> &#x7684;&#x500D;&#x6570;</td><td style="text-align: center;">&#x6700;&#x5927;&#x503C; <span class="math inline">\(\dfrac{n}{4}\)</span></td></tr><tr class="even"><td style="text-align: center;"><span class="math inline">\(n\)</span>&#x4E3A; <span class="math inline">\(6\)</span> &#x7684;&#x500D;&#x6570;</td><td style="text-align: center;">&#x6700;&#x5C0F;&#x503C;&#x53D6; <span class="math inline">\(\dfrac{n}{6}\)</span></td></tr><tr class="odd"><td style="text-align: center;"><span class="math inline">\(n\)</span>&#x4E3A; <span class="math inline">\(4x+2\)</span>&#xFF08;<span class="math inline">\(x\)</span> &#x4E3A;&#x6574;&#x6570;&#xFF09;</td><td style="text-align: center;">&#x4F7F; <span class="math inline">\(b=1\)</span>&#xFF0C;&#x5C06; <span class="math inline">\(n\)</span> &#x51CF;&#x53BB; <span class="math inline">\(1\times6\)</span> &#x5F97; <span class="math inline">\((4x+2)-6=4(x-1)\)</span>&#xFF0C;&#x6700;&#x5927;&#x503C;&#x5373;&#x4E3A; <span class="math inline">\(\dfrac{n-6}{4}+1=\)</span><span class="math inline">\(\lfloor\dfrac{n}{4}\rfloor\)</span></td></tr><tr class="even"><td style="text-align: center;"><span class="math inline">\(n\)</span>&#x4E3A; <span class="math inline">\(6x+2\)</span></td><td style="text-align: center;">&#x4F7F; <span class="math inline">\(a=2\)</span>&#xFF0C;&#x51CF;&#x53BB; <span class="math inline">\(2\times4\)</span> &#x5F97; <span class="math inline">\(6x+2-8=6(x-1)\)</span>&#xFF0C;&#x6700;&#x5C0F;&#x503C;&#x5373;&#x4E3A; <span class="math inline">\(\dfrac{n-8}{6}+2=\lfloor\dfrac{n+4}{6}\rfloor\)</span></td></tr><tr class="odd"><td style="text-align: center;"><span class="math inline">\(n\)</span>&#x4E3A; <span class="math inline">\(6x+4\)</span></td><td style="text-align: center;">&#x4F7F; <span class="math inline">\(a=1\)</span> &#xFF0C;&#x540C;&#x4E0A;&#x53EF;&#x5F97;&#x6700;&#x5C0F;&#x503C;&#x4E3A; <span class="math inline">\(\dfrac{n-4}{6}+1\)</span> &#x5728; <span class="math inline">\(n\)</span> &#x4E3A;&#x6574;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x53EF;&#x7B49;&#x4E8E; <span class="math inline">\(\lfloor \dfrac{n+4}{6}\rfloor\)</span></td></tr></tbody></table><p><strong>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(n\)</span>&#x4E00;&#x5B9A;&#x6EE1;&#x8DB3;&#x4EE5;&#x4E0A;&#x7684;&#x7B2C; <span class="math inline">\(1,3\)</span> &#x6761;&#x4E4B;&#x4E00;&#x548C;&#x7B2C;<span class="math inline">\(2,4,5\)</span>&#x6761;&#x4E4B;&#x4E00;&#xFF0C;&#x5176;&#x4E2D;&#x5404;&#x5BF9;&#x5E94;&#x6700;&#x5927;&#x503C;&#x548C;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x5206;&#x522B;&#x662F; <span class="math inline">\(\lfloor\dfrac{n}{4}\rfloor\)</span> &#x548C; <span class="math inline">\(\lfloor\dfrac{n+4}{6}\rfloor\)</span>&#x3002;</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">max</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?a:b;}</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">min</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">long</span> <span class="type">long</span> b)</span></span>{<span class="keyword">return</span> a&gt;b?b:a;}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>||n%<span class="number">2</span>==<span class="number">1</span>){<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);<span class="keyword">continue</span>;}</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,(n+<span class="number">4</span>)/<span class="number">6</span>,n/<span class="number">4</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP5638</title>
      <link href="/oi_blogs/2022/05/12/SP5638/"/>
      <url>/oi_blogs/2022/05/12/SP5638/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/SP5638">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><p><span class="math inline">\(\color{white}\text{&#x7F51;&#x8BFE;&#x6478;&#x9C7C;&#x5199;&#x9898;&#x89E3;}\)</span></p><p><del>&#x4F5C;&#x4E3A; ac &#x7684;&#x7B2C;&#x4E00;&#x9053;&#x9ED1;&#x9898;&#x5F53;&#x7136;&#x8981;&#x6C34;&#x4E00;&#x7BC7;&#x9898;&#x89E3;&#x4E86;&#xFF08;&#x96FE;</del></p><p>&#x6CA1;&#x505A;&#x8FC7;&#x7684;&#x5EFA;&#x8BAE;&#x5148;&#x505A; <a href="https://www.luogu.com.cn/problem/solution/SP703">SP703</a>&#x3002;&#x672C;&#x9898;&#x4E0E;<a href="https://www.luogu.com.cn/problem/P7685">P7685</a>&#x603B;&#x4F53;&#x601D;&#x8DEF;&#x4E43;&#x81F3;&#x4EE3;&#x7801;&#x90FD;<del>&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF08;&#x5212;&#x6389;</del>&#x3002;</p><p>&#x8003;&#x8651;&#x4ECE; DP &#x5165;&#x624B;&#xFF0C;&#x8BBE;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#x6570;&#x91CF;&#x4E3A; <span class="math inline">\(i-1\)</span>&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5904;&#x4E8E; <span class="math inline">\(a_{i-1}\)</span> &#x4F4D;&#x7F6E;&#xFF0C;&#x8BBE;&#x53E6;&#x5916; <span class="math inline">\(2\)</span> &#x4E2A;&#x5458;&#x5DE5;&#x7684;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A; <span class="math inline">\(x,y\)</span>&#xFF0C;&#x5219;&#x63A8;&#x51FA;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;</p><p><span class="math display">\[f[i][x][y]=\min(f[i-1][x][y]+C(a[i-1],a[i]))\]</span></p><p><span class="math display">\[f[i][x][a[i-1]]=\min(f[i-1][x][y]+C(y,a[i]))\]</span></p><p><span class="math display">\[f[i][a[i-1]][y]=\min(f[i-1][x][y]+C(x,a[i]))\]</span></p><p>&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053; <span class="math inline">\(f[i-1]\)</span>&#x6240;&#x5B58;&#x7684;&#x6570;&#xFF0C;&#x5E76;&#x4E0D;&#x5173;&#x5FC3; <span class="math inline">\(f[i-2]\)</span>&#x4E4B;&#x524D;&#x5B58;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x7EC4;&#x3002;</p><p>&#x4EE5;&#x4E0A; DP &#x6C42;&#x89E3;&#x6700;&#x5C0F;&#x6210;&#x672C;&#x3002;</p><p>&#x5728;&#x8F6C;&#x79FB; DP&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x5B58;&#x5728;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7684;&#x4E22;&#x5931;&#xFF0C;&#x65E0;&#x6CD5;&#x66F4;&#x597D;&#x7684;&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x6240;&#x670D;&#x52A1;&#x7684;&#x670D;&#x52A1;&#x5458;&#x662F;&#x54EA;&#x4F4D;&#x3002;</p><p><span class="math inline">\(\color{white}\text{&#x6211;&#x7684;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x5462;&#xFF1F;}\)</span></p><blockquote><p>&#x5728;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x65B9;&#x6848;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x505A;&#x6CD5;&#x65F6;&#x800C;&#x5916;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x4E0E; DP&#x72B6;&#x6001;&#x5927;&#x5C0F;&#x76F8;&#x540C;&#x7684;&#x6570;&#x7EC4;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x201C;&#x6700;&#x4F18;&#x89E3;&#x201D;&#x662F;&#x4ECE;&#x4F55;&#x5904;&#x8F6C;&#x79FB;&#x800C;&#x6765;&#x7684;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5728;DP&#x6C42;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x540E;&#xFF0C;&#x7528;&#x8FC7;&#x4E00;&#x6B21;&#x9012;&#x5F52;&#xFF0C;&#x6CBF;&#x7740;&#x8BB0;&#x5F55;&#x7684;&#x6BCF;&#x4E00;&#x6B65;&#x201C;&#x8F6C;&#x79FB;&#x6765;&#x6E90;&#x201D;&#x56DE;&#x5230;&#x521D;&#x6001;&#xFF0C;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x6001;&#x5230;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x8F6C;&#x79FB;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6C42;&#x7684;&#x65B9;&#x6848;</p></blockquote><blockquote><p>&#x2014;&#x2014;&#x300A;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x300B;</p></blockquote><p>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x6BCF;&#x6B21;&#x8F6C;&#x79FB; DP &#x65F6;&#x6570;&#x7EC4;&#x6240;&#x5DEE;&#x522B;&#x7684;&#x6570;&#x636E;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;</p><ul><li><span class="math inline">\(y\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},y\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li><li><span class="math inline">\(x\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},x\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li><li>&#x4E0D;&#x53D8;&#xFF1B;</li></ul><p>&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E9B;&#x8FDB;&#x5165; DP &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x524D;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x5B58;&#x4E0B;&#x6765;&#x3002;DP&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;&#x6240;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x53CD;&#x63A8;&#x3002;</p><p>&#x8BBE; <span class="math inline">\(path\)</span> &#x4E3A; DP&#x5728;&#x76F8;&#x5E94;&#x72B6;&#x6001;&#x65F6;&#x5B58;&#x50A8;&#x4E0B;&#x6765;&#x7684;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x670D;&#x52A1;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x5F53;&#x90A3;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E4B;&#x524D;&#x670D;&#x52A1;&#x7684;&#x4F4D;&#x7F6E;&#x662F;<span class="math inline">\(a_{i-1}\)</span>&#x65F6;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x90A3;&#x4E2A;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x7684;&#x7F16;&#x53F7;&#x4E0D;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x5C06; <span class="math inline">\(path\)</span> &#x518D;&#x6539;&#x4E3A; <span class="math inline">\(0\)</span> &#xFF08;&#x4FBF;&#x4E8E;&#x540E;&#x671F;&#x56DE;&#x6EAF;&#xFF09;&#x3002; <span class="math inline">\(mx,my\)</span> &#x521D;&#x59CB;&#x503C;&#x4E3A;&#x7B54;&#x6848;&#x6240;&#x5728;&#x6570;&#x7EC4;&#x7684;&#x4E8C;&#x4E09;&#x7EF4;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">x_[i]=mx,y_[i]=my;</span><br><span class="line"><span class="keyword">if</span>(path[i][mx][my])a[i<span class="number">-1</span>]==mx?mx=path[i][mx][my]:my=path[i][mx][my];</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(3\)</span>&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x7684;&#x4F4D;&#x7F6E;&#x5728; <span class="math inline">\(a_{i-1}\)</span> &#xFF0C;DP &#x673A;&#x5236;&#x4F7F;&#x5F97; <span class="math inline">\(a_{i}\)</span>&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x3002;&#x5012;&#x63A8;&#x56DE;&#x53BB;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0; <span class="math inline">\(mx\)</span> &#x6216; $ my$ &#x662F; <span class="math inline">\(a_{i-1}\)</span> &#x5219;&#x8BF4;&#x660E; <span class="math inline">\(mx\)</span> &#x6216; <span class="math inline">\(my\)</span> &#x5728; <span class="math inline">\(i-1\)</span> &#x72B6;&#x6001;&#x65F6;&#x662F;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#xFF0C;&#x518D;&#x6839;&#x636E; <span class="math inline">\(path\)</span> &#x5012;&#x63A8;&#x56DE;&#x53BB;&#x5373;&#x53EF;&#x3002;</p><p>&#x904D;&#x5386;&#x7ED3;&#x675F;&#x540E;&#x518D;&#x6765;&#x4E00;&#x6B21;&#x6B63;&#x5E8F;&#x904D;&#x5386;&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x7B54;&#x6848;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_L 301</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_N 3001</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][MAX_L][MAX_L];</span><br><span class="line"><span class="type">int</span> a[MAX_N],c[MAX_L][MAX_L],l,n,ans,X[MAX_N],Y[MAX_N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> path[MAX_N][MAX_L][MAX_L];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=l; i++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=l; k++) {</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i][k]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;=l; x++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;=l; y++)</span><br><span class="line">f[<span class="number">0</span>][x][y]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>]=<span class="number">3</span>,f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>,X[<span class="number">0</span>]=<span class="number">1</span>,Y[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line"><span class="built_in">clean</span>(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]!=<span class="number">0x3f3f3f3f</span>&amp;&amp;x!=y) {</span><br><span class="line"><span class="type">int</span> z=a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(x!=a[i]&amp;&amp;y!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][x][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i]),path[i][x][y]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(x!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][z]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][x][z]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i]),path[i][x][z]=y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(y!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][z][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][z][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i]),path[i][z][y]=x;<span class="comment">//z&#x8981;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E0D;&#x80FD;&#x653E;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x56E0;&#x4E3A;z&#x662F;&#x4EE3;&#x66FF;x&#x7684;&#x3002; </span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans=<span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="type">int</span> mx,my;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line"><span class="keyword">if</span>(f[n&amp;<span class="number">1</span>][x][y]&lt;ans)mx=x,my=y,ans=f[n&amp;<span class="number">1</span>][x][y];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">X[i]=mx,Y[i]=my;<span class="comment">//&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x7B49;&#x4E8E;a_{i-1}&#x7684;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d %d\n&quot;,mx,my);</span></span><br><span class="line"><span class="keyword">if</span>(path[i][mx][my])(a[i<span class="number">-1</span>]==mx)?(mx=path[i][mx][my]):(my=path[i][mx][my]);</span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> num_x=<span class="number">1</span>,num_y=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line"><span class="keyword">if</span>(X[i]==a[i<span class="number">-1</span>])num_x= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));<span class="comment">//&#x56E0;&#x4E3A;x[i]==a[i-1]&#x6240;&#x4EE5;X[i]&#x4F1A;&#x88AB;&#x8F6C;&#x79FB;&#x5230;f&#x6570;&#x7EC4;&#x9690;&#x85CF;&#x7684;&#x90A3;&#x4E2A;&#x7EAC;&#x5EA6;&#x3002; </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Y[i]==a[i<span class="number">-1</span>])num_y= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>)));</span><br><span class="line">} </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> c[x][y];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span> </span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;=l; k++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=l; j++) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][k][j]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优先队列简介</title>
      <link href="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/"/>
      <url>/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;">&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;</h1><p>&#x5982;&#x679C;&#x8F93;&#x5165; <span class="math inline">\(6\)</span> &#x4E2A;&#x6570;&#xFF1A;<span class="math inline">\(3&#xFF0C;1&#xFF0C;9&#xFF0C;5&#xFF0C;11&#xFF0C;0\)</span></p><p>&#x666E;&#x901A;&#x7684;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/1.png"></p><p>&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/2.png"></p><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x51FA;&#x961F;&#x987A;&#x5E8F;&#x662F;<strong>&#x4ECE;&#x5927;&#x5230;&#x5C0F;</strong></p><p>&#x7136;&#x800C;&#xFF0C;&#x8FD9;&#x9053;&#x9898;&#x8981;&#x6C42;&#x7684;&#x662F;&#x8BA9;&#x5E72;&#x8349;&#x5305;&#x6570;&#x91CF;<strong>&#x6700;&#x5C11;</strong>&#xFF0C;&#x90A3;&#x4E48;&#x51FA;&#x961F;&#x987A;&#x5E8F;&#x5E94;&#x8BE5;&#x662F;<strong>&#x4ECE;&#x5C0F;&#x5F80;&#x5927;</strong>&#x3002;&#x90A3;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;</p><ul><li>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x5C06;&#x8981;&#x5165;&#x961F;&#x7684;&#x6570;&#x7684;<strong>&#x76F8;&#x53CD;&#x6570;</strong>&#x63D2;&#x5165;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x53D6;&#x51FA;&#x6765;&#x65F6;&#xFF0C;&#x518D;&#x628A;&#x4ED6;&#x53D6;&#x76F8;&#x53CD;&#x6570;&#x53D8;&#x56DE;&#x539F;&#x6765;&#x7684;&#x5143;&#x7D20;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x628A;&#x5C0F;&#x7684;&#x653E;&#x5728;&#x961F;&#x5934;&#x3002;&#x5C31;&#x50CF;&#x8FD9;&#x6837;&#xFF1A;</li></ul><p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/3.png"></p><p>&#x4F46;&#x7528;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x3002;&#x5C31;&#x4E0D;&#x80FD;&#x7528;&#x521A;&#x521A;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x4E0D;&#x81EA;&#x5E26;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x6392;&#x5E8F;&#x7684;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{<span class="type">int</span> a ,<span class="type">int</span> b};</span><br><span class="line"></span><br><span class="line">priority_queue&lt;Node&gt;q;<span class="comment">//&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;</span></span><br></pre></td></tr></table></figure><ul><li><strong>&#x66F4;&#x4E3A;&#x901A;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#xFF1A;&#x91CD;&#x8F7D;&#x201C;&#x5C0F;&#x4E8E;&#x53F7;&#x201D;&#x5F53;&#x4F5C;&#x201C;&#x5927;&#x4E8E;&#x53F7;&#x201D;&#x6765;&#x7F16;&#x5199;&#x51FD;&#x6570;</strong>,&#x5982;&#xFF1A;<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node &amp;a,<span class="type">const</span> Node &amp;b){<span class="keyword">return</span> a.a&gt;b.a;}</span><br></pre></td></tr></table></figure></li><li>&#x8FD9;&#x6837; priority_queue&#x4F1A;&#x8BA4;&#x4E3A;&#x201C;&#x5927;&#x201D;&#x7684;&#x66F4;&#x201C;&#x5C0F;&#x201D;&#xFF0C;&#x201C;&#x5C0F;&#x201D;&#x7684;&#x66F4;&#x201C;&#x5927;&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x7ED3;&#x6784;&#x4F53;&#x4F18;&#x5148;&#x961F;&#x5217;&#x3002;</li></ul><h3 id="&#x987A;&#x5E8F;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x4E86;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x600E;&#x4E48;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;">&#x987A;&#x5E8F;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x600E;&#x4E48;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;&#x3002;</h3><p>&#x65E2;&#x7136;&#x77E5;&#x9053;&#x4F18;&#x5148;&#x961F;&#x5217;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><p><img src="/oi_blogs/2022/04/25/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E7%AE%80%E4%BB%8B/4.png"></p><p>&#x90A3;&#x4E48;&#x5982;&#x679C;&#x8981;&#x5220;&#x53BB;<strong>&#x4E2D;&#x95F4;</strong>&#x7684; <span class="math inline">\(5\)</span> &#x8981;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;</p><ol type="1"><li><p><strong>&#x6700;&#x6734;&#x7D20;</strong>&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x4E00;&#x4E2A;&#x4E2A;&#x51FA;&#x961F;&#xFF0C;&#x7136;&#x540E;&#x5165;&#x961F;&#xFF0C;&#x77E5;&#x9053;&#x627E;&#x5230;5&#x4E3A;&#x6B62;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x591A;&#x4ECB;&#x7ECD;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<span class="math inline">\(\theta(n \log n)\)</span></p></li><li><p>&#x5148;&#x628A;&#x8981;&#x5220;&#x7684;&#x6570;&#x5B58;&#x5230;&#x4E00;&#x4E2A;<strong>&#x6570;&#x7EC4;&#x6216;&#x961F;&#x5217;</strong>&#x91CC;&#xFF0C;&#x7B49;&#x5230;&#x53D6;&#x51FA;&#x6765;&#x65F6;&#x5728;&#x6BD4;&#x5BF9;&#x8BE5;&#x6570;&#x662F;&#x5426;&#x5DF2;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x5982;&#x5426;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x662F;&#xFF0C;&#x4ECE;&#x65B0;&#x53D6;&#x6570;&#x3002;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<span class="math inline">\(\theta(n)\)</span></p></li></ol><p><em>&#x672C;&#x7247;&#x53C2;&#x8003;&#x4E66;&#x7C4D;&#xFF1A; &#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x2014;&#x2014;&#x4F5C;&#x8005;&#xFF1A;&#x674E;&#x715C;&#x4E1C;</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1849_[USACO12MAR]Tractor_S题解</title>
      <link href="/oi_blogs/2022/04/05/P1849-USACO12MAR-Tractor-S%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/04/05/P1849-USACO12MAR-Tractor-S%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1849">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><h2 id="&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;">&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;</h2><p>&#x56E0;&#x4E3A;&#x672C;&#x9898;&#x89E3;&#x4E3A;&#x4F18;&#x5148;&#x961F;&#x5217;&#x89E3;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x77E5;&#x9053;&#x6216;&#x4E0D;&#x4E86;&#x89E3;&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x6982;&#x5FF5;&#x6216;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x7684;&#x8BF7;<a href="https://by505244.github.io/oi_blogs/2022/05/11/&#x4F18;&#x5148;&#x961F;&#x5217;&#x7B80;&#x4ECB;/">&#x70B9;&#x51FB;&#x8FD9;&#x91CC;</a>&#x3002;</p><hr><h3 id="&#x4EE3;&#x7801;&#x601D;&#x8DEF;"><strong>&#x4EE3;&#x7801;&#x601D;&#x8DEF;</strong></h3><ol type="1"><li>&#x91CD;&#x8F7D;&#x201C;&lt;&quot;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x5B9E;&#x73B0;&#x5C0F;&#x6839;&#x4E8C;&#x53C9;&#x5806;&#xFF08;&#x5373;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x4F18;&#x5148;&#x961F;&#x5217;&#xFF09;&#x4E14;&#x8BA9; <span class="math inline">\(sum\)</span>&#xFF08;&#x9700;&#x8981;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#xFF09;<strong>&#x6700;&#x5C11;&#x7684;</strong>&#x5728;&#x5806;&#x9876;&#xFF09;</li><li>&#x8BFB;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5F80;&#x961F;&#x5217;&#x91CC;&#x653E;&#x4E00;&#x4E2A;&#x548C;<strong>&#x62D6;&#x62C9;&#x673A;&#x521D;&#x59CB;&#x5750;&#x6807;</strong>&#x548C;&#x6570;&#x503C;&#x4E3A;**<span class="math inline">\(0\)</span>**&#x7684;sum&#xFF08;&#x9700;&#x8981;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#xFF09;&#xFF0C;</li><li>&#x6211;&#x4EEC;&#x9996;&#x5148;&#x5224;&#x65AD;&#x961F;&#x5217;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x4E3A;&#x7A7A;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#xFF08;<strong>&#x53EA;&#x6709;&#x5728;&#x65E0;&#x7B54;&#x6848;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;</strong>&#xFF09;&#x3002;</li><li>&#x53D6;&#x51FA;&#x5806;&#x9876;&#x5143;&#x7D20;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x79FB;&#x52A8;&#x7684;&#x5E72;&#x8349;&#x6570;&#x91CF;&#x6700;&#x5C11;&#x7684;&#xFF09;&#xFF0C;&#x5E76;&#x653E;&#x5728;&#x7ED3;&#x6784;&#x4F53; <span class="math inline">\(a\)</span> &#x5185;</li><li>&#x5224;&#x65AD;&#x5806;&#x9876;&#x5143;&#x7D20;&#x662F;&#x5426;&#x5230;&#x8FBE;&#x539F;&#x70B9;&#xFF0C;&#x5982;&#x662F;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x7B54;&#x6848;&#x5E76;<strong>&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#x6216;&#x76F4;&#x63A5;<code>return 0;</code></strong>&#xFF0C;&#x5426;&#xFF0C;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;&#xFF1B;</li><li>&#x5224;&#x65AD;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x662F;&#x5426;&#x6709;&#x5E72;&#x8349;&#x5305;&#xFF0C;&#x5982;&#x6709;&#xFF0C;<span class="math inline">\(sum++\)</span>&#x5E76;&#x5165;&#x961F;&#xFF0C;&#x65E0;&#xFF0C;&#x76F4;&#x63A5;&#x5165;&#x961F;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x6807;&#x8BB0;&#x8BE5;&#x4F4D;&#x7F6E;&#x5DF2;&#x8D70;&#x8FC7;&#xFF08;&#x9632;&#x6B62;&#x91CD;&#x590D;&#x7ED5;&#x5708;&#xFF09;&#x3002;</li><li>&#x7EE7;&#x7EED;&#x5FAA;&#x73AF; <span class="math inline">\(3-6\)</span> &#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x76F4;&#x5230;&#x88AB;&#x7B2C;<span class="math inline">\(5\)</span> &#x6B65;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#x3002;</li></ol><h4 id="&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90E8;&#x5206;&#x770B;&#x5B8C;&#x4F9D;&#x7136;&#x4E0D;&#x660E;&#x767D;&#x5177;&#x4F53;&#x601D;&#x8DEF;&#x6216;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#x90A3;&#x4E48;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x4E4B;&#x4E00;">&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90E8;&#x5206;&#x770B;&#x5B8C;&#x4F9D;&#x7136;&#x4E0D;&#x660E;&#x767D;&#x5177;&#x4F53;&#x601D;&#x8DEF;&#x6216;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#xFF0C;&#x90A3;&#x4E48;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x4E4B;&#x4E00;&#xFF1A;</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> {</span><br><span class="line">    <span class="type">int</span> x, y, sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">abab</span><span class="params">(<span class="type">int</span> sum,<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{ <span class="comment">//&#x5165;&#x961F;&#x5217;</span></span><br><span class="line">a1.sum=sum,a1.x=x,a1.y=y;</span><br><span class="line">q.<span class="built_in">push</span>(a1);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//t.x&#x548C;t.y&#x5206;&#x522B;&#x662F;&#x62D6;&#x62C9;&#x673A;&#x7684;&#x5750;&#x6807;</span></span><br><span class="line">Node t;</span><br><span class="line">t.sum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//&#x8FDB;&#x961F;&#x5217;</span></span><br><span class="line">q.<span class="built_in">push</span>(t);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {<span class="comment">//&#x5224;&#x65AD;&#x961F;&#x5217;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;</span></span><br><span class="line">a = q.<span class="built_in">top</span>();</span><br><span class="line"><span class="comment">//&#x53D6;&#x51FA;&#x961F;&#x5934;&#x5143;&#x7D20;</span></span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="comment">//&#x961F;&#x5934;&#x5143;&#x7D20;&#x51FA;&#x961F;</span></span><br><span class="line"><span class="keyword">if</span> (a.x == <span class="number">0</span> &amp;&amp; a.y == <span class="number">0</span>) {<span class="comment">//&#x5224;&#x65AD;&#x62D6;&#x62C9;&#x673A;&#x662F;&#x5426;&#x5230;&#x8FBE;&#x539F;&#x70B9;</span></span><br><span class="line">cout &lt;&lt; a.sum &lt;&lt; endl;</span><br><span class="line"><span class="comment">//&#x8F93;&#x51FA;&#x7B54;&#x6848;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (a.y + <span class="number">1</span> &lt;= <span class="number">1001</span>&amp;&amp; flag[a.x][a.y + <span class="number">1</span>] == <span class="number">0</span> ) {</span><br><span class="line"><span class="comment">//&#x9632;&#x6B62;a.y&#x8D8A;&#x754C;   &#x5224;&#x65AD;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x8D70;&#x8FC7;</span></span><br><span class="line"><span class="keyword">if</span> (can[a.x][a.y + <span class="number">1</span>]) {</span><br><span class="line">        <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x5E72;&#x8349;&#x5305;</span></span><br><span class="line"><span class="built_in">abab</span>(a.sum+<span class="number">1</span>,a.x,a.y+<span class="number">1</span>);<span class="comment">//&#x5165;&#x961F;</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">abab</span>(a.sum,a.x,a.y+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">flag[a.x][a.y + <span class="number">1</span>] = <span class="number">1</span>;<span class="comment">//&#x6807;&#x8BB0;&#x4E3A;&#x5DF2;&#x8D70;&#x8FC7;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.com.cn/paste/0x4fk9s3">&#x5B8C;&#x6574;&#x4EE3;&#x7801;</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf1651B题解</title>
      <link href="/oi_blogs/2022/03/21/cf1651b%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/03/21/cf1651b%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>&#x5DF2;&#x77E5; <span class="math inline">\(2\times|a_i-a_j| \gea_i+a_j\)</span></p><p>&#x4E0D;&#x59A8;&#x8BBE; <span class="math inline">\(a_i\ge a_j.\)</span></p><p>&#x5F97; <span class="math inline">\(2\times a_i-2\times a_j\gea_i+a_j\)</span></p><p>&#x5F97; <span class="math inline">\(a_i\ge 3\times a_j\)</span> &#xFF0C;&#x7B26;&#x5408;<span class="math inline">\(a_i\ge a_j\)</span> &#x3002;</p><hr><p><a href="https://www.luogu.com.cn/problem/CF1651B">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><p>&#x8BBE; <span class="math inline">\(a_1=1\)</span> &#xFF0C;&#x5219; <span class="math inline">\(a_n\ge 3^{n}\)</span> &#x3002;</p><p><span class="math display">\[\begin{align*}\begin{split}\because \left \\{\begin{array}{l}a_i\le10^9\\\\a_n\ge3^n\\\\a_i\ge 3\times a_j\end{array}\right.\end{split}\end{align*}\]</span></p><p><span class="math inline">\(\therefore n&lt;20\)</span></p><p>&#x6240;&#x4EE5;&#x5728; <span class="math inline">\(n\ge20\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x65E0;&#x89E3;&#x3002;</p><p><span class="math inline">\(n\le19\)</span> &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x53EA;&#x9700;&#x8981;&#x8BBE; <span class="math inline">\(a_1=1\)</span>&#x3002;</p><p>&#x5176;&#x4F59; <span class="math inline">\(a_i=a_{i-1}\times3(i\ne1,i\len)\)</span> &#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--) {</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">20</span>) {</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(a*=<span class="number">3</span>)/<span class="number">3</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf1651a</title>
      <link href="/oi_blogs/2022/03/21/cf1651a/"/>
      <url>/oi_blogs/2022/03/21/cf1651a/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1651A">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><h3 id="&#x9898;&#x610F;&#x7FFB;&#x8BD1;">&#x9898;&#x610F;&#x7FFB;&#x8BD1;&#xFF1A;</h3><p>&#x4E00;&#x4E2A;&#x6709; <span class="math inline">\(n\)</span>&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x6BD4;&#x8D5B;&#xFF0C;&#x6BCF;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;&#x6DD8;&#x6C70; <span class="math inline">\(1\)</span>&#x652F;&#x961F;&#x4F0D;&#xFF0C;&#x6DD8;&#x6C70;&#x7684;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li><p>&#x5F53;&#x4E24;&#x652F;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x662F;&#x5076;&#x6570;&#x65F6;&#xFF0C;&#x6DD8;&#x6C70;&#x7F16;&#x53F7;&#x8F83;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x961F;&#x4F0D;&#x3002;</p></li><li><p>&#x5F53;&#x4E24;&#x652F;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x662F;&#x5947;&#x6570;&#x65F6;&#xFF0C;&#x6DD8;&#x6C70;&#x7F16;&#x53F7;&#x8F83;&#x5927;&#x7684;&#x90A3;&#x4E2A;&#x961F;&#x4F0D;&#x3002;</p></li></ul><p>&#x4E00;&#x5F00;&#x59CB;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x90FD;&#x662F;&#x6309;&#x987A;&#x5E8F;&#x6392;&#x5217;&#x7684;&#x3002;</p><p>&#x53C2;&#x89C1; <img src="/oi_blogs/2022/03/21/cf1651a/1.png" alt="&#x9898;&#x76EE;&#x7684;&#x56FE;"></p><h3 id="&#x89E3;&#x9898;&#x65B9;&#x6CD5;">&#x89E3;&#x9898;&#x65B9;&#x6CD5;</h3><p>&#x5206;&#x6790;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x6240;&#x6709;&#x7EC4;&#x7684;&#x961F;&#x4F0D;&#x7F16;&#x53F7;&#x52A0;&#x8D77;&#x6765;&#x90FD;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x8F83;&#x5927;&#x7684;&#x961F;&#x4F0D;&#x6DD8;&#x6C70;&#xFF0C;&#x56E0;&#x4E3A;&#x8F83;&#x5927;&#x7684;&#x961F;&#x4F0D;&#x4E00;&#x5B9A;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;&#x6BCF;&#x7EC4;&#x90FD;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5947;&#x6570;&#x52A0;&#x5947;&#x6570;&#x4E00;&#x5B9A;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x76F4;&#x6DD8;&#x6C70;&#x8F83;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x7B54;&#x6848;&#x5C31;&#x662F;&#x7F16;&#x53F7;&#x4E3A;&#x6700;&#x5927;&#x7684;&#x5947;&#x6570;&#x7684;&#x961F;&#x4F0D;&#x4E86;&#x3002;&#x56E0;&#x4E3A;&#x7F16;&#x53F7;&#x6700;&#x5927;&#x5230;<span class="math inline">\(2^n\)</span> &#x6240;&#x4EE5;&#x7B54;&#x6848;&#x5C31;&#x662F; <span class="math inline">\(2^n-1\)</span> &#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--){</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="number">1</span>&lt;&lt;a)<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P7685题解</title>
      <link href="/oi_blogs/2022/03/17/P7865%E9%A2%98%E8%A7%A3/"/>
      <url>/oi_blogs/2022/03/17/P7865%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P7685">&#x9898;&#x76EE;&#x4F20;&#x9001;&#x95E8;</a></p><p><span class="math inline">\(\color{white}\text{&#x7F51;&#x8BFE;&#x6478;&#x9C7C;&#x5199;&#x9898;&#x89E3;}\)</span></p><p><del>&#x4F5C;&#x4E3A; ac &#x7684;&#x7B2C;&#x4E00;&#x9053;&#x9ED1;&#x9898;&#x5F53;&#x7136;&#x8981;&#x6C34;&#x4E00;&#x7BC7;&#x9898;&#x89E3;&#x4E86;&#xFF08;&#x96FE;</del></p><p>&#x6CA1;&#x505A;&#x8FC7;&#x7684;&#x5EFA;&#x8BAE;&#x5148;&#x505A; <a href="https://www.luogu.com.cn/problem/solution/SP703">SP703</a>&#x3002;&#x672C;&#x9898;&#x4E0E; <a href="https://www.luogu.com.cn/problem/P7685">P7685</a>&#x603B;&#x4F53;&#x601D;&#x8DEF;&#x4E43;&#x81F3;&#x4EE3;&#x7801;&#x90FD;<del>&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF08;&#x5212;&#x6389;</del>&#x3002;</p><p>&#x8003;&#x8651;&#x4ECE; DP &#x5165;&#x624B;&#xFF0C;&#x8BBE;&#x5F53;&#x524D;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#x6570;&#x91CF;&#x4E3A; <span class="math inline">\(i-1\)</span>&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5904;&#x4E8E; <span class="math inline">\(a_{i-1}\)</span> &#x4F4D;&#x7F6E;&#xFF0C;&#x8BBE;&#x53E6;&#x5916; <span class="math inline">\(2\)</span> &#x4E2A;&#x5458;&#x5DE5;&#x7684;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A; <span class="math inline">\(x,y\)</span>&#xFF0C;&#x5219;&#x63A8;&#x51FA;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;</p><p><span class="math display">\[f[i][x][y]=\min(f[i-1][x][y]+C(a[i-1],a[i]))\]</span></p><p><span class="math display">\[f[i][x][a[i-1]]=\min(f[i-1][x][y]+C(y,a[i]))\]</span></p><p><span class="math display">\[f[i][a[i-1]][y]=\min(f[i-1][x][y]+C(x,a[i]))\]</span></p><p>&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053; <span class="math inline">\(f[i-1]\)</span>&#x6240;&#x5B58;&#x7684;&#x6570;&#xFF0C;&#x5E76;&#x4E0D;&#x5173;&#x5FC3; <span class="math inline">\(f[i-2]\)</span>&#x4E4B;&#x524D;&#x5B58;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x7EC4;&#x3002;</p><p>&#x4EE5;&#x4E0A; DP &#x6C42;&#x89E3;&#x6700;&#x5C0F;&#x6210;&#x672C;&#x3002;</p><p>&#x5728;&#x8F6C;&#x79FB; DP&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x6EDA;&#x52A8;&#x6570;&#x7EC4;&#x7684;&#x5B58;&#x5728;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7684;&#x4E22;&#x5931;&#xFF0C;&#x65E0;&#x6CD5;&#x66F4;&#x597D;&#x7684;&#x6C42;&#x51FA;&#x6BCF;&#x4E2A;&#x70B9;&#x6240;&#x670D;&#x52A1;&#x7684;&#x670D;&#x52A1;&#x5458;&#x662F;&#x54EA;&#x4F4D;&#x3002;</p><p><span class="math inline">\(\color{white}\text{&#x6211;&#x7684;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x5462;&#xFF1F;}\)</span></p><blockquote><p>&#x5728;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x65B9;&#x6848;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x505A;&#x6CD5;&#x65F6;&#x800C;&#x5916;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x4E0E; DP&#x72B6;&#x6001;&#x5927;&#x5C0F;&#x76F8;&#x540C;&#x7684;&#x6570;&#x7EC4;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x201C;&#x6700;&#x4F18;&#x89E3;&#x201D;&#x662F;&#x4ECE;&#x4F55;&#x5904;&#x8F6C;&#x79FB;&#x800C;&#x6765;&#x7684;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5728;DP&#x6C42;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x540E;&#xFF0C;&#x7528;&#x8FC7;&#x4E00;&#x6B21;&#x9012;&#x5F52;&#xFF0C;&#x6CBF;&#x7740;&#x8BB0;&#x5F55;&#x7684;&#x6BCF;&#x4E00;&#x6B65;&#x201C;&#x8F6C;&#x79FB;&#x6765;&#x6E90;&#x201D;&#x56DE;&#x5230;&#x521D;&#x6001;&#xFF0C;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x4E00;&#x6761;&#x4ECE;&#x521D;&#x6001;&#x5230;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x8F6C;&#x79FB;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6C42;&#x7684;&#x65B9;&#x6848;</p></blockquote><blockquote><p>&#x2014;&#x2014;&#x300A;&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x8FDB;&#x9636;&#x6307;&#x5357;&#x300B;</p></blockquote><p>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x6BCF;&#x6B21;&#x8F6C;&#x79FB; DP &#x65F6;&#x6570;&#x7EC4;&#x6240;&#x5DEE;&#x522B;&#x7684;&#x6570;&#x636E;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;</p><ul><li><span class="math inline">\(y\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},y\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li><li><span class="math inline">\(x\)</span> &#x53D8;&#x4E3A; <span class="math inline">\(a_{i-1},x\)</span> &#x8FDB;&#x5165; dp &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#xFF1B;</li><li>&#x4E0D;&#x53D8;&#xFF1B;</li></ul><p>&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E9B;&#x8FDB;&#x5165; DP &#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x524D;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x5B58;&#x4E0B;&#x6765;&#x3002;DP&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x6839;&#x636E;&#x6240;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x53CD;&#x63A8;&#x3002;</p><p>&#x8BBE; <span class="math inline">\(path\)</span> &#x4E3A; DP&#x5728;&#x76F8;&#x5E94;&#x72B6;&#x6001;&#x65F6;&#x5B58;&#x50A8;&#x4E0B;&#x6765;&#x7684;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x670D;&#x52A1;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x5F53;&#x90A3;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E4B;&#x524D;&#x670D;&#x52A1;&#x7684;&#x4F4D;&#x7F6E;&#x662F;<span class="math inline">\(a_{i-1}\)</span>&#x65F6;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x90A3;&#x4E2A;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#x670D;&#x52A1;&#x5458;&#x7684;&#x7F16;&#x53F7;&#x4E0D;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;&#x5C06; <span class="math inline">\(path\)</span> &#x518D;&#x6539;&#x4E3A; <span class="math inline">\(0\)</span> &#xFF08;&#x4FBF;&#x4E8E;&#x540E;&#x671F;&#x56DE;&#x6EAF;&#xFF09;&#x3002; <span class="math inline">\(mx,my\)</span> &#x521D;&#x59CB;&#x503C;&#x4E3A;&#x7B54;&#x6848;&#x6240;&#x5728;&#x6570;&#x7EC4;&#x7684;&#x4E8C;&#x4E09;&#x7EF4;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">x_[i]=mx,y_[i]=my;</span><br><span class="line"><span class="keyword">if</span>(path[i][mx][my])a[i<span class="number">-1</span>]==mx?mx=path[i][mx][my]:my=path[i][mx][my];</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;<span class="math inline">\(3\)</span>&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5458;&#x7684;&#x4F4D;&#x7F6E;&#x5728; <span class="math inline">\(a_{i-1}\)</span> &#xFF0C;DP &#x673A;&#x5236;&#x4F7F;&#x5F97; <span class="math inline">\(a_{i}\)</span>&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x3002;&#x5012;&#x63A8;&#x56DE;&#x53BB;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0; <span class="math inline">\(mx\)</span> &#x6216; $ my$ &#x662F; <span class="math inline">\(a_{i-1}\)</span> &#x5219;&#x8BF4;&#x660E; <span class="math inline">\(mx\)</span> &#x6216; <span class="math inline">\(my\)</span> &#x5728; <span class="math inline">\(i-1\)</span> &#x72B6;&#x6001;&#x65F6;&#x662F;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x7EF4;&#x5EA6;&#x7684;&#xFF0C;&#x518D;&#x6839;&#x636E; <span class="math inline">\(path\)</span> &#x5012;&#x63A8;&#x56DE;&#x53BB;&#x5373;&#x53EF;&#x3002;</p><p>&#x904D;&#x5386;&#x7ED3;&#x675F;&#x540E;&#x518D;&#x6765;&#x4E00;&#x6B21;&#x6B63;&#x5E8F;&#x904D;&#x5386;&#x5373;&#x53EF;&#x6C42;&#x51FA;&#x7B54;&#x6848;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;I AK IOI&quot;</span>);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_L 201</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_N 1001</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][MAX_L][MAX_L];</span><br><span class="line"><span class="type">int</span> a[MAX_N],c[MAX_L][MAX_L],l,n,ans,X[MAX_N],Y[MAX_N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> path[MAX_N][MAX_L][MAX_L];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=l; i++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=l; k++) {</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i][k]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;=l; x++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;=l; y++)</span><br><span class="line">f[<span class="number">0</span>][x][y]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>]=<span class="number">3</span>,f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>,X[<span class="number">0</span>]=<span class="number">1</span>,Y[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++) {</span><br><span class="line"><span class="built_in">clean</span>(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]!=<span class="number">0x3f3f3f3f</span>&amp;&amp;x!=y) {</span><br><span class="line"><span class="type">int</span> z=a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(x!=a[i]&amp;&amp;y!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][x][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(z,a[i]),path[i][x][y]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(x!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][x][z]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][x][z]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(y,a[i]),path[i][x][z]=y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(y!=a[i]&amp;&amp;z!=a[i]) {</span><br><span class="line"><span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][z][y]&gt;f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i])) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][z][y]=f[i&amp;<span class="number">1</span>^<span class="number">1</span>][x][y]+<span class="built_in">C</span>(x,a[i]),path[i][z][y]=x;<span class="comment">//z&#x8981;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E0D;&#x80FD;&#x653E;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x56E0;&#x4E3A;z&#x662F;&#x4EE3;&#x66FF;x&#x7684;&#x3002; </span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans=<span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="type">int</span> mx,my;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;=l; x++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">1</span>; y&lt;=l; y++) {</span><br><span class="line"><span class="keyword">if</span>(f[n&amp;<span class="number">1</span>][x][y]&lt;ans)mx=x,my=y,ans=f[n&amp;<span class="number">1</span>][x][y];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n; i&gt;=<span class="number">1</span>; i--) {</span><br><span class="line">X[i]=mx,Y[i]=my;<span class="comment">//&#x4E00;&#x5B9A;&#x6709;&#x4E00;&#x4E2A;&#x7B49;&#x4E8E;a_{i-1}&#x7684;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d %d\n&quot;,mx,my);</span></span><br><span class="line"><span class="keyword">if</span>(path[i][mx][my])(a[i<span class="number">-1</span>]==mx)?(mx=path[i][mx][my]):(my=path[i][mx][my]);</span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> num_x=<span class="number">1</span>,num_y=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++){</span><br><span class="line"><span class="keyword">if</span>(X[i]==a[i<span class="number">-1</span>])num_x= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));<span class="comment">//&#x56E0;&#x4E3A;x[i]==a[i-1]&#x6240;&#x4EE5;X[i]&#x4F1A;&#x88AB;&#x8F6C;&#x79FB;&#x5230;f&#x6570;&#x7EC4;&#x9690;&#x85CF;&#x7684;&#x90A3;&#x4E2A;&#x7EAC;&#x5EA6;&#x3002; </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Y[i]==a[i<span class="number">-1</span>])num_y= num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,num_x==<span class="number">1</span>?(num_y==<span class="number">2</span>?<span class="number">3</span>:<span class="number">2</span>):(num_x==<span class="number">2</span>?(num_y==<span class="number">3</span>?<span class="number">1</span>:<span class="number">3</span>):(num_y==<span class="number">1</span>?<span class="number">2</span>:<span class="number">1</span>)));</span><br><span class="line">} </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> c[x][y];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">(<span class="type">int</span> i)</span> </span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;=l; k++) {</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=l; j++) {</span><br><span class="line">f[i&amp;<span class="number">1</span>][k][j]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
